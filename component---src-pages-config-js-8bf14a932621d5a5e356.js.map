{"version":3,"sources":["webpack:///./src/pages/config.js"],"names":["styles","mainPadding","padding","mainSidePadding","mainPdf","display","justifyContent","mainTable","backgroundColor","border","borderRadius","boxShadow","position","backButton","cusor","label","fontWeight","Config","microsoftTeams","initialize","state","apiKey","adminId","admins","admin","contacts","contact","keys","new","handleChange","bind","submit","getOptions","handleContact","save","getAdmin","debounce","handleToken","handleAdmin","a","fetch","mode","method","body","JSON","stringify","path","key","res","json","console","log","error","this","setState","componentDidMount","window","getContext","context","tid","map","c","content","company_name","value","id","e","event","target","name","settings","setValidityState","registerOnSaveHandler","saveEvent","setSettings","websiteUrl","contentUrl","entityId","suggestedDisplayName","notifySuccess","render","theme","themes","teams","style","gap","vAlign","hAlign","onSubmit","width","href","icon","as","CloseIcon","AcceptIcon","items","placeholder","onChange","fluid","search","noResultsMessage","onClick","m","cursor","disabled","React","Component"],"mappings":"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","file":"component---src-pages-config-js-8bf14a932621d5a5e356.js","sourcesContent":["import React from 'react';\nimport debounce from 'debounce'\nimport { Provider, themes, Flex, FlexItem, Dropdown, Input, Header, Label} from '@fluentui/react-northstar';\nimport { CloseIcon, AcceptIcon } from '@fluentui/react-icons-northstar';\n\n\nconst styles={\n    mainPadding:{padding:\"0px 2em\"},\n    mainSidePadding:{padding:\"10px 2em\"},\n    mainPdf:{display:\"flex\", justifyContent:\"center\"},\n    mainTable:{\n        backgroundColor: \"#fff\",\n        border: \"1px solid #d8e2f0\",\n        borderRadius: \"4px\",\n        boxShadow: \"0 0 10px 0 rgba(19,29,41,.05)\",\n        position: \"relative\",\n        padding: \"0em 3em 2em\"\n    },\n    backButton:{\n        cusor:\"pointer\"\n    },\n    label:{\n        fontWeight:\"bold\"\n    }\n}\nclass Config extends React.Component{\n    constructor(){\n        super();\n        if(this.microsoftTeams)\n            this.microsoftTeams.initialize();\n        this.state ={\n            apiKey:\"\",\n            adminId:\"\",\n            admins:null,\n            admin:null,\n            contacts:null,\n            contact:null,\n            keys:[],\n            new:false\n\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.submit = this.submit.bind(this)\n        this.getOptions = this.getOptions.bind(this)\n        this.handleContact = this.handleContact.bind(this)\n        this.save = this.save.bind(this)\n        this.getAdmin = debounce(this.getAdmin,2000).bind(this)\n        this.handleToken = this.handleToken.bind(this)\n        this.handleAdmin = this.handleAdmin.bind(this)\n    }\n\n    async getAdmin(apiKey){\n        try{\n            const res = await fetch(\n                `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n                {\n                    mode:\"cors\",\n                    method:\"POST\",\n                    body: JSON.stringify({\n                        method:\"GET\",\n                        path:`administrations.json`,\n                        key: apiKey\n                    })\n                }\n            )\n            const json = await res.json()\n            console.log({json})\n            if(json.error)\n                this.setState({admins:false})\n            else\n                this.setState({admins:json})\n        }\n        catch(e){\n            console.log(e)\n        }\n    }\n    componentDidMount(){\n        this.microsoftTeams = window? window.microsoftTeams: null;\n        this.microsoftTeams.initialize();\n        this.microsoftTeams.getContext(async context=>{\n            const {tid} = context;\n            try{\n                const res = await fetch(\n                    `https://moneybirdhandlerproxy.azurewebsites.net/api/key/${tid}`,\n                    {\n                        mode:\"cors\",\n                        method:\"GET\"\n                    }\n                )\n                const json = await res.json()\n                console.log({json})\n                this.setState({keys:json})\n    \n            }\n            catch(e){\n                console.log(\"BOOM!\")\n                console.log(e)\n            }\n    })\n    }\n    getOptions(){\n        const {contacts} = this.state;\n        return contacts.map(c=>({content:c.company_name, value:c.id}))\n    }\n    handleContact(e, value){\n        this.setState({ contact: value.value }, this.save)\n    }\n    handleAdmin(e, value){\n        this.setState({ admin: value.value })\n        this.submit(value.value)\n    }\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n    handleToken(e){\n        if(e){\n            this.setState({apiKey:e.target.value})\n            this.getAdmin(e.target.value);\n        }\n\n    }\n    async submit({value :adminId}){\n        console.log(adminId)\n        const {apiKey} = this.state;\n\n            this.microsoftTeams.initialize();\n            this.microsoftTeams.getContext(async context=>{\n                const {tid} = context;\n                try{\n                    const res = await fetch(\n                        `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n                        {\n                            mode:\"cors\",\n                            method:\"POST\",\n                            body: JSON.stringify({\n                                method:\"GET\",\n                                path:`${adminId}/contacts.json`,\n                                key: apiKey,\n                                tid\n                            })\n                        }\n                    )\n                    const json = await res.json()\n                    console.log({json})\n                    this.setState({contacts:json})\n        \n                }\n                catch(e){\n                    console.log(\"BOOM!\")\n                    console.log(e)\n                }\n        })\n    }\n\n    save(){\n        \n        const {apiKey, admin:{value: adminId}, contact} = this.state;\n        if(this.microsoftTeams){\n\n            this.microsoftTeams.initialize();\n            this.microsoftTeams.settings.setValidityState(true);\n            this.microsoftTeams.settings.registerOnSaveHandler((saveEvent) => {\n                this.microsoftTeams.settings.setSettings({\n                    websiteUrl: \"https://jp5525.github.io/teams-demo\",\n                    contentUrl: \"https://jp5525.github.io/teams-demo\",\n                    entityId: JSON.stringify({apiKey, adminId, contact}),\n                    suggestedDisplayName: \"MoneyBird Invoices\"\n                });\n                saveEvent.notifySuccess();\n            });\n        }\n    }\n\n    render(){\n        const {contacts, contact, admins, admin, apiKey, keys } = this.state\n        return (\n            \n                <Provider theme={themes.teams}>\n                    <div style={styles.mainPadding}>\n                        <div style={styles.mainTable}>\n                            <Header content=\"MoneyBird Setup\" />\n                            <Flex gap=\"gap.small\" vAlign=\"center\" hAlign=\"start\">\n                                <FlexItem justifyContent=\"center\">\n                                    <form onSubmit={this.submit} style={{width:\"100%\"}}>\n                                        \n                                        <label style={styles.label} >API Token</label> <br/>\n                                        <span>This is the API Token for you MoneyBird Account. You can generate one <a target=\"_blank\" href=\"https://moneybird.com/user/applications/new\">here</a> for personal use.</span>\n                                        {admins== false? <> <br/><Label content=\"API Token not vaild\" icon={{as: CloseIcon}}/></> : null}\n                                        {admins? <> <br/><Label content=\"API Token IS vaild\" icon={{as: AcceptIcon}}/></> : null}\n                                        <br />\n                                        <Dropdown\n                                            items={keys}\n                                            placeholder='API Token'\n                                            onChange={this.handleToken}\n                                            name=\"apiKey\"\n                                            id=\"apiKey\"\n                                            fluid={true}\n                                            search={true}\n                                            noResultsMessage={{\n                                                content:`Add ${apiKey}...`, \n                                                onClick: m=>{\n                                                    this.setState({new:true, keys:[apiKey, ...keys]})\n                                                }, \n                                                style:{cursor: \"pointer\"}\n                                            }}\n                                        />\n                                        \n                                        <br />\n\n                                        <label style={styles.label} >Administration</label> <br/>\n                                        <span>This is the administration you created your API Token for</span>\n                                        <Dropdown\n                                            items={admins? admins.map(a=>({content:a.name, value:a.id})): []}\n                                            value={admin? admin.content : null}\n                                            placeholder='Administrations'\n                                            onChange={this.handleAdmin}\n                                            name=\"Admin\"\n                                            disabled={admins? false: true}\n                                            fluid={true}\n                                            />\n\n                                        <br />\n\n                                        <label style={styles.label} >Contact</label> <br/>\n                                        <span>The contact whos invoice's will show up on the invoices tabs</span>\n                                        <Dropdown\n                                            items={contacts? this.getOptions(): []}\n                                            value={contact? contact.content : null}\n                                            placeholder='Contacts'\n                                            onChange={this.handleContact}\n                                            name=\"contact\"\n                                            disabled={contacts? false: true}\n                                            />\n                \n                                    </form>\n                                </FlexItem>\n                            </Flex>\n                        </div>\n                    </div>\n                </Provider>\n            \n            \n        )\n\n    }\n}\n\nexport default Config;\n"],"sourceRoot":""}