{"version":3,"sources":["webpack:///./src/pages/connector.js"],"names":["isNilOrEmpty","str","length","styles","mainPadding","padding","mainSidePadding","mainPdf","display","justifyContent","mainTable","backgroundColor","border","borderRadius","boxShadow","position","backButton","cusor","label","fontWeight","langs","en","heading","apiSection","title","style","description","target","href","succsess","fail","placeholder","show","contactSection","typeSection","deleteDialog","cancel","confirm","header","message","x","tabs","nl","Config","microsoftTeams","initialize","state","apiKey","content","key","adminId","admins","admin","contacts","contact","loadingContacts","keys","isNew","isOpen","isContactsOpen","locale","tabType","showApiKeys","loaded","addWebhookToMoneybird","bind","setUpWebhook","deleteKeyFromDb","createKeyEntry","getAdmin","componentDidMount","a","this","window","getContext","context","tid","fetch","mode","method","res","json","console","log","map","k","cursor","class","onClick","setState","deleteKey","webhook","body","JSON","stringify","path","data","url","events","error","id","v","settings","setValidityState","registerOnSaveHandler","saveEvent","entityId","teamId","channelId","setSettings","contentUrl","configName","getSettings","webhookUrl","exec","encoded","encodeURIComponent","notifySuccess","filter","handleToken","render","lang","split","theme","themes","teams","gap","vAlign","hAlign","width","background","color","marginTop","marginBottom","items","onOpenChange","name","clearable","fluid","search","open","searchQuery","itemToString","i","onSearchQueryChange","e","noResultsMessage","m","active","cancelButton","onCancel","confirmButton","onConfirm","backdrop","React","Component"],"mappings":"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","file":"component---src-pages-connector-js-baa7b4dd1e94f1757132.js","sourcesContent":["import React from 'react';\nimport { Provider, themes, Flex, FlexItem, Dropdown, RadioGroup, Header, Label, Button, Dialog} from '@fluentui/react-northstar';\nimport { BanIcon, AcceptIcon } from '@fluentui/react-icons-northstar';\n\nconst isNilOrEmpty = str => str==null || str.length == 0\n\nconst styles={\n    mainPadding:{padding:\"0px 2em\"},\n    mainSidePadding:{padding:\"10px 2em\"},\n    mainPdf:{display:\"flex\", justifyContent:\"center\"},\n    mainTable:{\n        backgroundColor: \"#fff\",\n        border: \"1px solid #d8e2f0\",\n        borderRadius: \"4px\",\n        boxShadow: \"0 0 10px 0 rgba(19,29,41,.05)\",\n        position: \"relative\",\n        padding: \"0em 3em 2em\"\n    },\n    backButton:{\n        cusor:\"pointer\"\n    },\n    label:{\n        fontWeight:\"bold\"\n    }\n}\n\nconst langs={\n    en:{\n        heading:\"Moneybird Configuration\",\n        apiSection:{\n            title: <label style={styles.label} >API Token</label>,\n            description:  <span>This is the API Token for you MoneyBird Account. You can generate one <a target=\"_blank\" href=\"https://moneybird.com/user/applications/new\">here</a> for personal use.</span>,\n            succsess: \"API Token is vaild\",\n            fail: \"API Token NOT vaild\",\n            placeholder: 'API Token',\n            show:\"Click to choose another api key\"\n        },\n        contactSection:{\n            title:<label style={styles.label} >Contact</label>,\n            description: <span>The contact whos data will show up on the tab</span>,\n            placeholder: 'Choose a Contact'\n        },\n        typeSection:{\n            title:<label style={styles.label} >Data Type</label>,\n            description: <span>The type of data to show on the tab</span>,\n           \n        },\n        deleteDialog:{\n            cancel: \"Cancel\",\n            confirm: \"Yes\",\n            header:\"Delete API Key\",\n            message: x=>`Are you sure you want to delete ${x}`,\n\n        },\n        tabs:[\"Invoices\", \"Quotes\"]\n    },\n    nl:{\n        heading:\"Moneybird Koppelen\",\n        apiSection:{\n            title:<label style={styles.label} >API token invoeren</label>,\n            description:  <span>Vul hier een API-token in van je Moneybird account. Je kunt <a target=\"_blank\" href=\"https://moneybird.com/user/applications/new\">hier</a> een API-token genereren. Vul een naam in die herkenbaar is voor deze connectie, bijvoorbeeld ‘Microsoft Teams Integratie’. Kies voor ‘API token voor persoonlijk gebruik’ en geef toegang voor alle onderdelen. Vervolgens verschijnt er een API-token in beeld. Vul deze hieronder in.</span>,\n            succsess: \"API-token is geldig\",\n            fail: \"API-token niet geldig\",\n            placeholder: 'API token invoeren',\n            show:\"Klik om een ​​andere API-sleutel te kiezen\"\n        },\n        contactSection:{\n            title:<label style={styles.label} >Contact</label>,\n            description:  <span>Selecteer de Contact waarvan je de gegevens wilt tonen in de Tab.</span>,\n            placeholder:\"Kies een Contact\"\n        },\n        typeSection:{\n            title:<label style={styles.label} >Data Type</label>,\n            description: <span>Het type gegevens dat op het tabblad moet worden weergegeven</span>,\n           \n        },\n        deleteDialog:{\n            cancel: \"Annuleren\",\n            confirm: \"Ja\",\n            header:\"API-sleutel verwijderen\",\n            message: x=>`Weet je zeker dat je wilt verwijderen ${x}`,\n\n        },\n        tabs:[\"Facturen\", \"Offertes\"]\n    }\n}\n\nclass Config extends React.Component{\n    constructor(){\n        super();\n        if(this.microsoftTeams)\n            this.microsoftTeams.initialize();\n        this.state ={\n            apiKey:{\n                content:<span></span>,\n                key:\"\"\n            },\n            adminId:null,\n            admins:null,\n            admin:null,\n            contacts:null,\n            contact:null,\n            loadingContacts:false,\n            keys:[],\n            isNew:false,\n            isOpen: false,\n            isContactsOpen: false,\n            locale:null,\n            tabType:\"invoices\",\n            showApiKeys: false,\n            loaded: false\n        }\n        \n        this.addWebhookToMoneybird = this.addWebhookToMoneybird.bind(this)\n        this.setUpWebhook = this.setUpWebhook.bind(this)\n        this.deleteKeyFromDb=this.deleteKeyFromDb.bind(this)\n        this.createKeyEntry=this.createKeyEntry.bind(this)\n        this.getAdmin =this.getAdmin.bind(this)\n    }\n\n    async componentDidMount(){\n        this.microsoftTeams = window? window.microsoftTeams: null;\n        this.microsoftTeams.initialize();\n        this.microsoftTeams.getContext((async context=>{\n            const {tid, locale} = context;\n            \n            try{\n                const res = await fetch(\n                    `https://moneybirdhandlerproxy.azurewebsites.net/api/key/${tid}`,\n                    {\n                        mode:\"cors\",\n                        method:\"GET\"\n                    }\n                )\n                const json = await res.json()\n                console.log({json})\n                const keys = json.map(k=>({\n                    content: <div>\n                        <span style={{cursor:\"pointer\"}} class=\"lnr lnr-trash\" onClick={()=>this.setState({deleteKey:k.key, isOpen:false})}></span> - <span style={{cursor:\"pointer\"}} onClick={async ()=>{await this.setUpWebhook(k.key)}}>{k.key}</span>\n                    </div>,\n                    key: k.key\n                }));\n                console.log({keys})\n                this.setState({keys, tid, locale})\n    \n            }\n            catch(e){\n                console.log(\"BOO\")\n                console.log(e)\n            }\n    }).bind(this))\n    }\n    \n    async addWebhookToMoneybird(apiKey, adminId, webhook){\n        const res = await fetch(\n            `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n            {\n                mode:\"cors\",\n                method:\"POST\",\n                body: JSON.stringify({\n                    method:\"POST\",\n                    path:`${adminId}/webhooks.json`,\n                    key: apiKey,\n                    data:{\n                        url:`https://moneybirdhandlerproxy.azurewebsites.net/api/teams/en/${webhook}`,\n                        events:[\"sales_invoice_created\"]\n                    }\n                })\n            }\n        )\n        return await res.json()\n    }\n\n    async getAdmin(apiKey, isNew=false){\n        \n        try{\n            const res = await fetch(\n                `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n                {\n                    mode:\"cors\",\n                    method:\"POST\",\n                    body: JSON.stringify({\n                        method:\"GET\",\n                        path:`administrations.json`,\n                        key: apiKey,\n                    })\n                }\n            )\n            const json = await res.json()\n            \n            if(json.error)\n                this.setState({admins:false,  isOpen:false, contacts:null})\n            else{\n                this.setState({admin:json[0], adminId:json[0].id, admins:true})\n                return json[0].id\n            }\n        }\n        catch(e){\n            console.log(e)\n        }\n    }\n\n    async setUpWebhook(v){\n        this.setState({apiKey:v, isOpen:false})\n        console.log(\"SETUPWEBHOOK\")\n        \n        this.microsoftTeams.settings.setValidityState(true);\n        console.log(\"saved\")\n        this.microsoftTeams.settings.registerOnSaveHandler((saveEvent=>{\n            console.log(\"REGISTERSAVEHANDLER\")\n            this.microsoftTeams.getContext((context=>{\n                console.log(\"GETCONTEXT\")\n                const {teamId, channelId} = context;\n                const contentUrl = `https://jp5525.github.io/teams-demo/connector`;\n                const entityId = `connector-moneybird-${teamId}-${channelId}`;\n\n                this.microsoftTeams.settings.setSettings({\n                    contentUrl,\n                    entityId,\n                    configName:\"MoneyBird Invoices\"\n                });\n\n                this.microsoftTeams.settings.getSettings(async settings=>{\n                    const { webhookUrl } = settings;\n                    const res = /webhook\\/(.*)/.exec(webhookUrl);\n                    const encoded = encodeURIComponent(res[1]);\n                    console.log({webhookUrl});\n\n                    const adminId = await this.getAdmin(v);\n                    //double encode the webhook\n                    const webhook = await this.addWebhookToMoneybird(v, adminId, encodeURIComponent(encoded))\n                    console.log({webhook})\n                        \n                    saveEvent.notifySuccess()\n                })\n\n            }).bind(this))\n        }).bind(this))\n    }\n\n    async deleteKeyFromDb(){\n        const {deleteKey, keys} = this.state;\n        if(!isNilOrEmpty(deleteKey)){\n            await fetch(\n                `https://moneybirdhandlerproxy.azurewebsites.net/api/key/${deleteKey}`,\n                {\n                    mode:\"cors\",\n                    method:\"DELETE\",\n                }\n            );\n            this.setState({deleteKey:null, apiKey:\"\", keys:keys.filter(x=>x.key != deleteKey)})\n        }\n    }\n    createKeyEntry(k){\n        return {\n            content:<div>\n                <span style={{cursor:\"pointer\"}} class=\"lnr lnr-trash\" onClick={()=>this.setState({deleteKey:k})}></span> - <span style={{cursor:\"pointer\"}} onClick={()=>this.handleToken(k)}>{k}</span>\n            </div>,\n            key:k\n        }\n    }\n\n    render(){\n        const {contacts, contact, admins, admin, apiKey, keys, isOpen, locale, loadingContacts, showApiKeys, deleteKey } = this.state;\n        console.log({locale})\n        const lang = locale? langs[locale.split(\"-\")[0]]: null\n        \n        return (\n            lang?\n                <Provider theme={themes.teams}>\n                    <div style={styles.mainPadding}>\n                        <div style={styles.mainTable}>\n                            <Header content={lang.heading}/>\n                            <Flex gap=\"gap.small\" vAlign=\"center\" hAlign=\"start\">\n                                <FlexItem justifyContent=\"center\">\n                                    <form  style={{width:\"100%\"}}>\n                                        \n                                        {lang.apiSection.title} <br/>\n                                        {lang.apiSection.description}\n                                        {admins== false? <> <br/><Label content={lang.apiSection.fail} style={{background:\"#cc4a31\", color:\"white\", marginTop: \"10px\", marginBottom:\"10px\"}}/></> : null}\n                                        {admins? <> <br/><Label content={lang.apiSection.succsess} style={{background:\"#7fba00\", color:\"white\", marginTop: \"10px\", marginBottom:\"10px\"}} /></> : null}\n                                        {<Dropdown\n                                            items={keys}\n                                            placeholder={lang.apiSection.placeholder}\n                                            onOpenChange={()=>this.setState({isOpen:!isOpen})}\n                                            name=\"apiKey\"\n                                            id=\"apiKey\"\n                                            clearable={apiKey && apiKey.length>0}\n                                            fluid={true}\n                                            search={true}\n                                            open={isOpen}\n                                            searchQuery={apiKey}\n                                            itemToString={i=> i? i.key : null}\n                                            onSearchQueryChange={(e, v)=>this.setState({apiKey:v.searchQuery})}\n                                            noResultsMessage={{\n                                                content:`Add... ${apiKey}`, \n                                                onClick: m=>{\n                                                    this.setState({isNew:true, keys:[this.createKeyEntry(apiKey), ...keys], isOpen:false})\n                                                    \n                                                }, \n                                                style:{cursor: \"pointer\"},\n                                                active: true\n                                            }}\n                                        />\n                                        }\n                                        <Dialog\n                                            cancelButton={lang.deleteDialog.cancel}\n                                            onCancel={()=>this.setState({deleteKey:null})}\n                                            confirmButton={lang.deleteDialog.confirm}\n                                            onConfirm={this.deleteKeyFromDb}\n                                            content={lang.deleteDialog.message(deleteKey)}\n                                            header={lang.deleteDialog.header}\n                                            open={!isNilOrEmpty(deleteKey)}\n                                            backdrop={true} \n                                        />\n                                        \n                                      \n                                    </form>\n                                </FlexItem>\n                            </Flex>\n                        </div>\n                    </div>\n                \n                </Provider>:\n                null\n            \n            \n        )\n\n    }\n}\n\nexport default Config;\n"],"sourceRoot":""}