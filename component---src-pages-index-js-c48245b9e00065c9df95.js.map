{"version":3,"sources":["webpack:///./node_modules/process/browser.js","webpack:///./node_modules/core-js/modules/es7.promise.finally.js","webpack:///./src/pages/index.js","webpack:///./node_modules/q/q.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","$export","core","global","speciesConstructor","promiseResolve","P","R","onFinally","C","Promise","isFunction","then","x","IndexPage","state","invoices","componentDidMount","microsoftTeams","window","initialize","getContext","a","entityId","console","log","JSON","parse","apiKey","adminId","contactId","contact","value","fetch","mode","method","body","stringify","path","key","res","json","setState","render","React","Component","definition","bootstrap","hasStacks","stack","qFileName","qStartingLine","captureLine","head","task","next","tail","flushing","requestTick","isNodeJS","laterQueue","flush","domain","enter","runSingle","pop","exit","toString","setImmediate","bind","MessageChannel","channel","port1","onmessage","requestPortTick","port2","postMessage","runAfter","Function","uncurryThis","f","QReturnValue","array_slice","slice","array_reduce","reduce","callback","basis","index","TypeError","array_indexOf","indexOf","array_map","map","thisp","self","collect","undefined","object_create","Object","create","Type","object_defineProperty","defineProperty","obj","prop","descriptor","object_hasOwnProperty","hasOwnProperty","object_keys","keys","object","object_toString","isStopIteration","exception","ReturnValue","makeStackTraceLong","error","promise","stacks","p","source","__minimumStackCounter__","stackCounter","configurable","unshift","stackString","lines","split","desiredLines","line","isInternalFrame","stackLine","join","filterStackString","getFileNameAndLineNumber","attempt1","exec","Number","attempt2","attempt3","fileNameAndLineNumber","fileName","lineNumber","qEndingLine","Q","isPromiseAlike","deferred","defer","resolve","reject","notify","coerce","fulfill","longStackSupport","longStackCounter","resolvedPromise","messages","progressListeners","promiseDispatch","op","operands","valueOf","nearerValue","nearer","isPromise","inspect","substring","become","newPromise","message","reason","progress","progressListener","resolver","race","answerPs","fallback","result","inspected","when","fulfilled","rejected","progressed","Q_DEBUG","makeNodeResolver","all","passByCopy","y","that","spread","makePromise","done","_fulfilled","newException","_rejected","newValue","threw","_progressed","onerror","tap","fcall","thenResolve","thenReject","isPending","isFulfilled","isRejected","alternative","unhandledReasons","unhandledRejections","reportedUnhandledRejections","trackUnhandledRejections","resetUnhandledRejections","rejection","at","atReport","splice","untrackRejection","trackRejection","rhs","dispatch","promises","pendingCount","snapshot","any","prev","current","err","allResolved","getUnhandledReasons","stopUnhandledRejectionTracking","master","async","makeGenerator","continuer","verb","arg","StopIteration","generator","errback","spawn","promised","get","set","del","mapply","post","send","mcall","invoke","fapply","fbind","warn","allSettled","regardless","fail","fin","onUnhandledError","ms","timeoutId","code","delay","nfapply","nodeArgs","nfcall","nfbind","denodeify","baseArgs","nbind","bound","nmapply","npost","nsend","nmcall","ninvoke","nodeify","nodeback","noConflict","Timeout","id","clearFn","_id","_clearFn","scope","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","html","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","getPrototypeOf","handle","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","event","data","createElement","documentElement","script","onreadystatechange","removeChild","appendChild","Math","random","addEventListener","attachEvent"],"mappings":"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","file":"component---src-pages-index-js-c48245b9e00065c9df95.js","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","import React from 'react';\nimport { async } from 'q';\n\nclass IndexPage extends React.Component{\n \n    constructor(){\n        super()\n        this.state= {\n            invoices:[]\n        }\n    }\n    componentDidMount(){\n        this.microsoftTeams = window? window.microsoftTeams: null;\n        if(this.microsoftTeams){\n            this.microsoftTeams.initialize();\n            this.microsoftTeams.getContext(async ({entityId}) =>{\n                console.log({entityId})\n                const {apiKey, adminId, contact:{value :contactId}} = JSON.parse(entityId);\n                const res = await fetch(\n                    `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n                    {\n                        mode:\"cors\",\n                        method:\"POST\",\n                        body: JSON.stringify({\n                            method:\"GET\",\n                            path:`${adminId}/sales_invoices.json?filter=contact_id:${contactId}`,\n                            key: apiKey\n                        })\n                    }\n                )\n                const json = await res.json();\n                this.setState({invoices: json})\n            })\n        }\n    }\n    render(){\n        return (\n        <div>\n            <h1>Hello World</h1>\n            <div>\n                {JSON.stringify(this.state.invoices)}\n            </div>\n        </div>)\n    }\n  \n}\n\nexport default IndexPage;\n","require(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es7.promise.finally\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\n// vim:ts=4:sts=4:sw=4:\n\n/*!\n *\n * Copyright 2009-2017 Kris Kowal under the terms of the MIT\n * license found at https://github.com/kriskowal/q/blob/v1/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n(function (definition) {\n  \"use strict\"; // This file will function properly as a <script> tag, or a module\n  // using CommonJS and NodeJS or RequireJS module formats.  In\n  // Common/Node/RequireJS, the module exports the Q API and when\n  // executed as a simple <script>, it creates a Q global instead.\n  // Montage Require\n\n  if (typeof bootstrap === \"function\") {\n    bootstrap(\"promise\", definition); // CommonJS\n  } else if (typeof exports === \"object\" && typeof module === \"object\") {\n    module.exports = definition(); // RequireJS\n  } else if (typeof define === \"function\" && define.amd) {\n    define(definition); // SES (Secure EcmaScript)\n  } else if (typeof ses !== \"undefined\") {\n    if (!ses.ok()) {\n      return;\n    } else {\n      ses.makeQ = definition;\n    } // <script>\n\n  } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n    // Prefer window over self for add-on scripts. Use self for\n    // non-windowed contexts.\n    var global = typeof window !== \"undefined\" ? window : self; // Get the `window` object, save the previous Q global\n    // and initialize Q as a global.\n\n    var previousQ = global.Q;\n    global.Q = definition(); // Add a noConflict function so Q can be removed from the\n    // global namespace.\n\n    global.Q.noConflict = function () {\n      global.Q = previousQ;\n      return this;\n    };\n  } else {\n    throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n  }\n})(function () {\n  \"use strict\";\n\n  var hasStacks = false;\n\n  try {\n    throw new Error();\n  } catch (e) {\n    hasStacks = !!e.stack;\n  } // All code after this point will be filtered from stack traces reported\n  // by Q.\n\n\n  var qStartingLine = captureLine();\n  var qFileName; // shims\n  // used for fallback in \"allResolved\"\n\n  var noop = function noop() {}; // Use the fastest possible means to execute a task in a future turn\n  // of the event loop.\n\n\n  var nextTick = function () {\n    // linked list of tasks (single, with head node)\n    var head = {\n      task: void 0,\n      next: null\n    };\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false; // queue for late tasks, used by unhandled rejection tracking\n\n    var laterQueue = [];\n\n    function flush() {\n      /* jshint loopfunc: true */\n      var task, domain;\n\n      while (head.next) {\n        head = head.next;\n        task = head.task;\n        head.task = void 0;\n        domain = head.domain;\n\n        if (domain) {\n          head.domain = void 0;\n          domain.enter();\n        }\n\n        runSingle(task, domain);\n      }\n\n      while (laterQueue.length) {\n        task = laterQueue.pop();\n        runSingle(task);\n      }\n\n      flushing = false;\n    } // runs a single function in the async queue\n\n\n    function runSingle(task, domain) {\n      try {\n        task();\n      } catch (e) {\n        if (isNodeJS) {\n          // In node, uncaught exceptions are considered fatal errors.\n          // Re-throw them synchronously to interrupt flushing!\n          // Ensure continuation if the uncaught exception is suppressed\n          // listening \"uncaughtException\" events (as domains does).\n          // Continue in next event to avoid tick recursion.\n          if (domain) {\n            domain.exit();\n          }\n\n          setTimeout(flush, 0);\n\n          if (domain) {\n            domain.enter();\n          }\n\n          throw e;\n        } else {\n          // In browsers, uncaught exceptions are not fatal.\n          // Re-throw them asynchronously to avoid slow-downs.\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      }\n\n      if (domain) {\n        domain.exit();\n      }\n    }\n\n    nextTick = function nextTick(task) {\n      tail = tail.next = {\n        task: task,\n        domain: isNodeJS && process.domain,\n        next: null\n      };\n\n      if (!flushing) {\n        flushing = true;\n        requestTick();\n      }\n    };\n\n    if (typeof process === \"object\" && process.toString() === \"[object process]\" && process.nextTick) {\n      // Ensure Q is in a real Node environment, with a `process.nextTick`.\n      // To see through fake Node environments:\n      // * Mocha test runner - exposes a `process` global without a `nextTick`\n      // * Browserify - exposes a `process.nexTick` function that uses\n      //   `setTimeout`. In this case `setImmediate` is preferred because\n      //    it is faster. Browserify's `process.toString()` yields\n      //   \"[object Object]\", while in a real Node environment\n      //   `process.toString()` yields \"[object process]\".\n      isNodeJS = true;\n\n      requestTick = function requestTick() {\n        process.nextTick(flush);\n      };\n    } else if (typeof setImmediate === \"function\") {\n      // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n      if (typeof window !== \"undefined\") {\n        requestTick = setImmediate.bind(window, flush);\n      } else {\n        requestTick = function requestTick() {\n          setImmediate(flush);\n        };\n      }\n    } else if (typeof MessageChannel !== \"undefined\") {\n      // modern browsers\n      // http://www.nonblocking.io/2011/06/windownexttick.html\n      var channel = new MessageChannel(); // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n      // working message ports the first time a page loads.\n\n      channel.port1.onmessage = function () {\n        requestTick = requestPortTick;\n        channel.port1.onmessage = flush;\n        flush();\n      };\n\n      var requestPortTick = function requestPortTick() {\n        // Opera requires us to provide a message payload, regardless of\n        // whether we use it.\n        channel.port2.postMessage(0);\n      };\n\n      requestTick = function requestTick() {\n        setTimeout(flush, 0);\n        requestPortTick();\n      };\n    } else {\n      // old browsers\n      requestTick = function requestTick() {\n        setTimeout(flush, 0);\n      };\n    } // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n\n\n    nextTick.runAfter = function (task) {\n      laterQueue.push(task);\n\n      if (!flushing) {\n        flushing = true;\n        requestTick();\n      }\n    };\n\n    return nextTick;\n  }(); // Attempt to make generics safe in the face of downstream\n  // modifications.\n  // There is no situation where this is necessary.\n  // If you need a security guarantee, these primordials need to be\n  // deeply frozen anyway, and if you don’t need a security guarantee,\n  // this is just plain paranoid.\n  // However, this **might** have the nice side-effect of reducing the size of\n  // the minified code by reducing x.call() to merely x()\n  // See Mark Miller’s explanation of what this does.\n  // http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\n\n\n  var call = Function.call;\n\n  function uncurryThis(f) {\n    return function () {\n      return call.apply(f, arguments);\n    };\n  } // This is equivalent, but slower:\n  // uncurryThis = Function_bind.bind(Function_bind.call);\n  // http://jsperf.com/uncurrythis\n\n\n  var array_slice = uncurryThis(Array.prototype.slice);\n  var array_reduce = uncurryThis(Array.prototype.reduce || function (callback, basis) {\n    var index = 0,\n        length = this.length; // concerning the initial value, if one is not provided\n\n    if (arguments.length === 1) {\n      // seek to the first value in the array, accounting\n      // for the possibility that is is a sparse array\n      do {\n        if (index in this) {\n          basis = this[index++];\n          break;\n        }\n\n        if (++index >= length) {\n          throw new TypeError();\n        }\n      } while (1);\n    } // reduce\n\n\n    for (; index < length; index++) {\n      // account for the possibility that the array is sparse\n      if (index in this) {\n        basis = callback(basis, this[index], index);\n      }\n    }\n\n    return basis;\n  });\n  var array_indexOf = uncurryThis(Array.prototype.indexOf || function (value) {\n    // not a very good shim, but good enough for our one use of it\n    for (var i = 0; i < this.length; i++) {\n      if (this[i] === value) {\n        return i;\n      }\n    }\n\n    return -1;\n  });\n  var array_map = uncurryThis(Array.prototype.map || function (callback, thisp) {\n    var self = this;\n    var collect = [];\n    array_reduce(self, function (undefined, value, index) {\n      collect.push(callback.call(thisp, value, index, self));\n    }, void 0);\n    return collect;\n  });\n\n  var object_create = Object.create || function (prototype) {\n    function Type() {}\n\n    Type.prototype = prototype;\n    return new Type();\n  };\n\n  var object_defineProperty = Object.defineProperty || function (obj, prop, descriptor) {\n    obj[prop] = descriptor.value;\n    return obj;\n  };\n\n  var object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\n  var object_keys = Object.keys || function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      if (object_hasOwnProperty(object, key)) {\n        keys.push(key);\n      }\n    }\n\n    return keys;\n  };\n\n  var object_toString = uncurryThis(Object.prototype.toString);\n\n  function isObject(value) {\n    return value === Object(value);\n  } // generator related shims\n  // FIXME: Remove this function once ES6 generators are in SpiderMonkey.\n\n\n  function isStopIteration(exception) {\n    return object_toString(exception) === \"[object StopIteration]\" || exception instanceof QReturnValue;\n  } // FIXME: Remove this helper and Q.return once ES6 generators are in\n  // SpiderMonkey.\n\n\n  var QReturnValue;\n\n  if (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n  } else {\n    QReturnValue = function QReturnValue(value) {\n      this.value = value;\n    };\n  } // long stack traces\n\n\n  var STACK_JUMP_SEPARATOR = \"From previous event:\";\n\n  function makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks && promise.stack && typeof error === \"object\" && error !== null && error.stack) {\n      var stacks = [];\n\n      for (var p = promise; !!p; p = p.source) {\n        if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {\n          object_defineProperty(error, \"__minimumStackCounter__\", {\n            value: p.stackCounter,\n            configurable: true\n          });\n          stacks.unshift(p.stack);\n        }\n      }\n\n      stacks.unshift(error.stack);\n      var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n      var stack = filterStackString(concatedStacks);\n      object_defineProperty(error, \"stack\", {\n        value: stack,\n        configurable: true\n      });\n    }\n  }\n\n  function filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n\n    for (var i = 0; i < lines.length; ++i) {\n      var line = lines[i];\n\n      if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n        desiredLines.push(line);\n      }\n    }\n\n    return desiredLines.join(\"\\n\");\n  }\n\n  function isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 || stackLine.indexOf(\"(node.js:\") !== -1;\n  }\n\n  function getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n\n    if (attempt1) {\n      return [attempt1[1], Number(attempt1[2])];\n    } // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n\n\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n\n    if (attempt2) {\n      return [attempt2[1], Number(attempt2[2])];\n    } // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n\n\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n\n    if (attempt3) {\n      return [attempt3[1], Number(attempt3[2])];\n    }\n  }\n\n  function isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n      return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n    return fileName === qFileName && lineNumber >= qStartingLine && lineNumber <= qEndingLine;\n  } // discover own file name and line number range for filtering stack\n  // traces\n\n\n  function captureLine() {\n    if (!hasStacks) {\n      return;\n    }\n\n    try {\n      throw new Error();\n    } catch (e) {\n      var lines = e.stack.split(\"\\n\");\n      var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n      var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n\n      if (!fileNameAndLineNumber) {\n        return;\n      }\n\n      qFileName = fileNameAndLineNumber[0];\n      return fileNameAndLineNumber[1];\n    }\n  }\n\n  function deprecate(callback, name, alternative) {\n    return function () {\n      if (typeof console !== \"undefined\" && typeof console.warn === \"function\") {\n        console.warn(name + \" is deprecated, use \" + alternative + \" instead.\", new Error(\"\").stack);\n      }\n\n      return callback.apply(callback, arguments);\n    };\n  } // end of shims\n  // beginning of real work\n\n  /**\n   * Constructs a promise for an immediate reference, passes promises through, or\n   * coerces promises from different systems.\n   * @param value immediate reference or promise\n   */\n\n\n  function Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n      return value;\n    } // assimilate thenables\n\n\n    if (isPromiseAlike(value)) {\n      return coerce(value);\n    } else {\n      return fulfill(value);\n    }\n  }\n\n  Q.resolve = Q;\n  /**\n   * Performs a task in a future turn of the event loop.\n   * @param {Function} task\n   */\n\n  Q.nextTick = nextTick;\n  /**\n   * Controls whether or not long stack traces will be on\n   */\n\n  Q.longStackSupport = false;\n  /**\n   * The counter is used to determine the stopping point for building\n   * long stack traces. In makeStackTraceLong we walk backwards through\n   * the linked list of promises, only stacks which were created before\n   * the rejection are concatenated.\n   */\n\n  var longStackCounter = 1; // enable long stacks if Q_DEBUG is set\n\n  if (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n  }\n  /**\n   * Constructs a {promise, resolve, reject} object.\n   *\n   * `resolve` is a callback to invoke with a more resolved value for the\n   * promise. To fulfill the promise, invoke `resolve` with any value that is\n   * not a thenable. To reject the promise, invoke `resolve` with a rejected\n   * thenable, or invoke `reject` with the reason directly. To resolve the\n   * promise to another thenable, thus putting it in the same state, invoke\n   * `resolve` with that other thenable.\n   */\n\n\n  Q.defer = defer;\n\n  function defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [],\n        progressListeners = [],\n        resolvedPromise;\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n      var args = array_slice(arguments);\n\n      if (messages) {\n        messages.push(args);\n\n        if (op === \"when\" && operands[1]) {\n          // progress operand\n          progressListeners.push(operands[1]);\n        }\n      } else {\n        Q.nextTick(function () {\n          resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n        });\n      }\n    }; // XXX deprecated\n\n\n    promise.valueOf = function () {\n      if (messages) {\n        return promise;\n      }\n\n      var nearerValue = nearer(resolvedPromise);\n\n      if (isPromise(nearerValue)) {\n        resolvedPromise = nearerValue; // shorten chain\n      }\n\n      return nearerValue;\n    };\n\n    promise.inspect = function () {\n      if (!resolvedPromise) {\n        return {\n          state: \"pending\"\n        };\n      }\n\n      return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n      try {\n        throw new Error();\n      } catch (e) {\n        // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n        // accessor around; that causes memory leaks as per GH-111. Just\n        // reify the stack trace as a string ASAP.\n        //\n        // At the same time, cut off the first line; it's always just\n        // \"[object Promise]\\n\", as per the `toString`.\n        promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        promise.stackCounter = longStackCounter++;\n      }\n    } // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n\n    function become(newPromise) {\n      resolvedPromise = newPromise;\n\n      if (Q.longStackSupport && hasStacks) {\n        // Only hold a reference to the new promise if long stacks\n        // are enabled to reduce memory usage\n        promise.source = newPromise;\n      }\n\n      array_reduce(messages, function (undefined, message) {\n        Q.nextTick(function () {\n          newPromise.promiseDispatch.apply(newPromise, message);\n        });\n      }, void 0);\n      messages = void 0;\n      progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n\n    deferred.resolve = function (value) {\n      if (resolvedPromise) {\n        return;\n      }\n\n      become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n      if (resolvedPromise) {\n        return;\n      }\n\n      become(fulfill(value));\n    };\n\n    deferred.reject = function (reason) {\n      if (resolvedPromise) {\n        return;\n      }\n\n      become(reject(reason));\n    };\n\n    deferred.notify = function (progress) {\n      if (resolvedPromise) {\n        return;\n      }\n\n      array_reduce(progressListeners, function (undefined, progressListener) {\n        Q.nextTick(function () {\n          progressListener(progress);\n        });\n      }, void 0);\n    };\n\n    return deferred;\n  }\n  /**\n   * Creates a Node-style callback that will resolve or reject the deferred\n   * promise.\n   * @returns a nodeback\n   */\n\n\n  defer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n      if (error) {\n        self.reject(error);\n      } else if (arguments.length > 2) {\n        self.resolve(array_slice(arguments, 1));\n      } else {\n        self.resolve(value);\n      }\n    };\n  };\n  /**\n   * @param resolver {Function} a function that returns nothing and accepts\n   * the resolve, reject, and notify functions for a deferred.\n   * @returns a promise that may be resolved with the given resolve and reject\n   * functions, or rejected by a thrown exception in resolver\n   */\n\n\n  Q.Promise = promise; // ES6\n\n  Q.promise = promise;\n\n  function promise(resolver) {\n    if (typeof resolver !== \"function\") {\n      throw new TypeError(\"resolver must be a function.\");\n    }\n\n    var deferred = defer();\n\n    try {\n      resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n      deferred.reject(reason);\n    }\n\n    return deferred.promise;\n  }\n\n  promise.race = race; // ES6\n\n  promise.all = all; // ES6\n\n  promise.reject = reject; // ES6\n\n  promise.resolve = Q; // ES6\n  // XXX experimental.  This method is a way to denote that a local value is\n  // serializable and should be immediately dispatched to a remote upon request,\n  // instead of passing a reference.\n\n  Q.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n  };\n\n  Promise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n  };\n  /**\n   * If two promises eventually fulfill to the same value, promises that value,\n   * but otherwise rejects.\n   * @param x {Any*}\n   * @param y {Any*}\n   * @returns {Any*} a promise for x and y if they are the same, but a rejection\n   * otherwise.\n   *\n   */\n\n\n  Q.join = function (x, y) {\n    return Q(x).join(y);\n  };\n\n  Promise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n      if (x === y) {\n        // TODO: \"===\" should be Object.is or equiv\n        return x;\n      } else {\n        throw new Error(\"Q can't join: not the same: \" + x + \" \" + y);\n      }\n    });\n  };\n  /**\n   * Returns a promise for the first of an array of promises to become settled.\n   * @param answers {Array[Any*]} promises to race\n   * @returns {Any*} the first promise to be settled\n   */\n\n\n  Q.race = race;\n\n  function race(answerPs) {\n    return promise(function (resolve, reject) {\n      // Switch to this once we can assume at least ES5\n      // answerPs.forEach(function (answerP) {\n      //     Q(answerP).then(resolve, reject);\n      // });\n      // Use this in the meantime\n      for (var i = 0, len = answerPs.length; i < len; i++) {\n        Q(answerPs[i]).then(resolve, reject);\n      }\n    });\n  }\n\n  Promise.prototype.race = function () {\n    return this.then(Q.race);\n  };\n  /**\n   * Constructs a Promise with a promise descriptor object and optional fallback\n   * function.  The descriptor contains methods like when(rejected), get(name),\n   * set(name, value), post(name, args), and delete(name), which all\n   * return either a value, a promise for a value, or a rejection.  The fallback\n   * accepts the operation name, a resolver, and any further arguments that would\n   * have been forwarded to the appropriate method above had a method been\n   * provided with the proper name.  The API makes no guarantees about the nature\n   * of the returned object, apart from that it is usable whereever promises are\n   * bought and sold.\n   */\n\n\n  Q.makePromise = Promise;\n\n  function Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n      fallback = function fallback(op) {\n        return reject(new Error(\"Promise does not support operation: \" + op));\n      };\n    }\n\n    if (inspect === void 0) {\n      inspect = function inspect() {\n        return {\n          state: \"unknown\"\n        };\n      };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n      var result;\n\n      try {\n        if (descriptor[op]) {\n          result = descriptor[op].apply(promise, args);\n        } else {\n          result = fallback.call(promise, op, args);\n        }\n      } catch (exception) {\n        result = reject(exception);\n      }\n\n      if (resolve) {\n        resolve(result);\n      }\n    };\n\n    promise.inspect = inspect; // XXX deprecated `valueOf` and `exception` support\n\n    if (inspect) {\n      var inspected = inspect();\n\n      if (inspected.state === \"rejected\") {\n        promise.exception = inspected.reason;\n      }\n\n      promise.valueOf = function () {\n        var inspected = inspect();\n\n        if (inspected.state === \"pending\" || inspected.state === \"rejected\") {\n          return promise;\n        }\n\n        return inspected.value;\n      };\n    }\n\n    return promise;\n  }\n\n  Promise.prototype.toString = function () {\n    return \"[object Promise]\";\n  };\n\n  Promise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false; // ensure the untrusted promise makes at most a\n    // single call to one of the callbacks\n\n    function _fulfilled(value) {\n      try {\n        return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n      } catch (exception) {\n        return reject(exception);\n      }\n    }\n\n    function _rejected(exception) {\n      if (typeof rejected === \"function\") {\n        makeStackTraceLong(exception, self);\n\n        try {\n          return rejected(exception);\n        } catch (newException) {\n          return reject(newException);\n        }\n      }\n\n      return reject(exception);\n    }\n\n    function _progressed(value) {\n      return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n      self.promiseDispatch(function (value) {\n        if (done) {\n          return;\n        }\n\n        done = true;\n        deferred.resolve(_fulfilled(value));\n      }, \"when\", [function (exception) {\n        if (done) {\n          return;\n        }\n\n        done = true;\n        deferred.resolve(_rejected(exception));\n      }]);\n    }); // Progress propagator need to be attached in the current tick.\n\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n      var newValue;\n      var threw = false;\n\n      try {\n        newValue = _progressed(value);\n      } catch (e) {\n        threw = true;\n\n        if (Q.onerror) {\n          Q.onerror(e);\n        } else {\n          throw e;\n        }\n      }\n\n      if (!threw) {\n        deferred.notify(newValue);\n      }\n    }]);\n    return deferred.promise;\n  };\n\n  Q.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n  };\n  /**\n   * Works almost like \"finally\", but not called for rejections.\n   * Original resolution value is passed through callback unaffected.\n   * Callback may return a promise that will be awaited for.\n   * @param {Function} callback\n   * @returns {Q.Promise}\n   * @example\n   * doSomething()\n   *   .then(...)\n   *   .tap(console.log)\n   *   .then(...);\n   */\n\n\n  Promise.prototype.tap = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n      return callback.fcall(value).thenResolve(value);\n    });\n  };\n  /**\n   * Registers an observer on a promise.\n   *\n   * Guarantees:\n   *\n   * 1. that fulfilled and rejected will be called only once.\n   * 2. that either the fulfilled callback or the rejected callback will be\n   *    called, but not both.\n   * 3. that fulfilled and rejected will not be called in this turn.\n   *\n   * @param value      promise or immediate reference to observe\n   * @param fulfilled  function to be called with the fulfilled value\n   * @param rejected   function to be called with the rejection exception\n   * @param progressed function to be called on any progress notifications\n   * @return promise for the return value from the invoked callback\n   */\n\n\n  Q.when = when;\n\n  function when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n  }\n\n  Promise.prototype.thenResolve = function (value) {\n    return this.then(function () {\n      return value;\n    });\n  };\n\n  Q.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n  };\n\n  Promise.prototype.thenReject = function (reason) {\n    return this.then(function () {\n      throw reason;\n    });\n  };\n\n  Q.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n  };\n  /**\n   * If an object is not a promise, it is as \"near\" as possible.\n   * If a promise is rejected, it is as \"near\" as possible too.\n   * If it’s a fulfilled promise, the fulfillment value is nearer.\n   * If it’s a deferred promise and the deferred has been resolved, the\n   * resolution is \"nearer\".\n   * @param object\n   * @returns most resolved (nearest) form of the object\n   */\n  // XXX should we re-do this?\n\n\n  Q.nearer = nearer;\n\n  function nearer(value) {\n    if (isPromise(value)) {\n      var inspected = value.inspect();\n\n      if (inspected.state === \"fulfilled\") {\n        return inspected.value;\n      }\n    }\n\n    return value;\n  }\n  /**\n   * @returns whether the given object is a promise.\n   * Otherwise it is a fulfilled value.\n   */\n\n\n  Q.isPromise = isPromise;\n\n  function isPromise(object) {\n    return object instanceof Promise;\n  }\n\n  Q.isPromiseAlike = isPromiseAlike;\n\n  function isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n  }\n  /**\n   * @returns whether the given object is a pending promise, meaning not\n   * fulfilled or rejected.\n   */\n\n\n  Q.isPending = isPending;\n\n  function isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n  }\n\n  Promise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n  };\n  /**\n   * @returns whether the given object is a value or fulfilled\n   * promise.\n   */\n\n\n  Q.isFulfilled = isFulfilled;\n\n  function isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n  }\n\n  Promise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n  };\n  /**\n   * @returns whether the given object is a rejected promise.\n   */\n\n\n  Q.isRejected = isRejected;\n\n  function isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n  }\n\n  Promise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n  }; //// BEGIN UNHANDLED REJECTION TRACKING\n  // This promise library consumes exceptions thrown in handlers so they can be\n  // handled by a subsequent promise.  The exceptions get added to this array when\n  // they are created, and removed when they are handled.  Note that in ES6 or\n  // shimmed environments, this would naturally be a `Set`.\n\n\n  var unhandledReasons = [];\n  var unhandledRejections = [];\n  var reportedUnhandledRejections = [];\n  var trackUnhandledRejections = true;\n\n  function resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n      trackUnhandledRejections = true;\n    }\n  }\n\n  function trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n      return;\n    }\n\n    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n      Q.nextTick.runAfter(function () {\n        if (array_indexOf(unhandledRejections, promise) !== -1) {\n          process.emit(\"unhandledRejection\", reason, promise);\n          reportedUnhandledRejections.push(promise);\n        }\n      });\n    }\n\n    unhandledRejections.push(promise);\n\n    if (reason && typeof reason.stack !== \"undefined\") {\n      unhandledReasons.push(reason.stack);\n    } else {\n      unhandledReasons.push(\"(no stack) \" + reason);\n    }\n  }\n\n  function untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n      return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n\n    if (at !== -1) {\n      if (typeof process === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n          var atReport = array_indexOf(reportedUnhandledRejections, promise);\n\n          if (atReport !== -1) {\n            process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n            reportedUnhandledRejections.splice(atReport, 1);\n          }\n        });\n      }\n\n      unhandledRejections.splice(at, 1);\n      unhandledReasons.splice(at, 1);\n    }\n  }\n\n  Q.resetUnhandledRejections = resetUnhandledRejections;\n\n  Q.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n  };\n\n  Q.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n  };\n\n  resetUnhandledRejections(); //// END UNHANDLED REJECTION TRACKING\n\n  /**\n   * Constructs a rejected promise.\n   * @param reason value describing the failure\n   */\n\n  Q.reject = reject;\n\n  function reject(reason) {\n    var rejection = Promise({\n      \"when\": function when(rejected) {\n        // note that the error has been handled\n        if (rejected) {\n          untrackRejection(this);\n        }\n\n        return rejected ? rejected(reason) : this;\n      }\n    }, function fallback() {\n      return this;\n    }, function inspect() {\n      return {\n        state: \"rejected\",\n        reason: reason\n      };\n    }); // Note that the reason has not been handled.\n\n    trackRejection(rejection, reason);\n    return rejection;\n  }\n  /**\n   * Constructs a fulfilled promise for an immediate reference.\n   * @param value immediate reference\n   */\n\n\n  Q.fulfill = fulfill;\n\n  function fulfill(value) {\n    return Promise({\n      \"when\": function when() {\n        return value;\n      },\n      \"get\": function get(name) {\n        return value[name];\n      },\n      \"set\": function set(name, rhs) {\n        value[name] = rhs;\n      },\n      \"delete\": function _delete(name) {\n        delete value[name];\n      },\n      \"post\": function post(name, args) {\n        // Mark Miller proposes that post with no name should apply a\n        // promised function.\n        if (name === null || name === void 0) {\n          return value.apply(void 0, args);\n        } else {\n          return value[name].apply(value, args);\n        }\n      },\n      \"apply\": function apply(thisp, args) {\n        return value.apply(thisp, args);\n      },\n      \"keys\": function keys() {\n        return object_keys(value);\n      }\n    }, void 0, function inspect() {\n      return {\n        state: \"fulfilled\",\n        value: value\n      };\n    });\n  }\n  /**\n   * Converts thenables to Q promises.\n   * @param promise thenable promise\n   * @returns a Q promise\n   */\n\n\n  function coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n      try {\n        promise.then(deferred.resolve, deferred.reject, deferred.notify);\n      } catch (exception) {\n        deferred.reject(exception);\n      }\n    });\n    return deferred.promise;\n  }\n  /**\n   * Annotates an object such that it will never be\n   * transferred away from this process over any promise\n   * communication channel.\n   * @param object\n   * @returns promise a wrapping of that object that\n   * additionally responds to the \"isDef\" message\n   * without a rejection.\n   */\n\n\n  Q.master = master;\n\n  function master(object) {\n    return Promise({\n      \"isDef\": function isDef() {}\n    }, function fallback(op, args) {\n      return dispatch(object, op, args);\n    }, function () {\n      return Q(object).inspect();\n    });\n  }\n  /**\n   * Spreads the values of a promised array of arguments into the\n   * fulfillment callback.\n   * @param fulfilled callback that receives variadic arguments from the\n   * promised array\n   * @param rejected callback that receives the exception if the promise\n   * is rejected.\n   * @returns a promise for the return value or thrown exception of\n   * either callback.\n   */\n\n\n  Q.spread = spread;\n\n  function spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n  }\n\n  Promise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n      return fulfilled.apply(void 0, array);\n    }, rejected);\n  };\n  /**\n   * The async function is a decorator for generator functions, turning\n   * them into asynchronous generators.  Although generators are only part\n   * of the newest ECMAScript 6 drafts, this code does not cause syntax\n   * errors in older engines.  This code should continue to work and will\n   * in fact improve over time as the language improves.\n   *\n   * ES6 generators are currently part of V8 version 3.19 with the\n   * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n   * for longer, but under an older Python-inspired form.  This function\n   * works on both kinds of generators.\n   *\n   * Decorates a generator function such that:\n   *  - it may yield promises\n   *  - execution will continue when that promise is fulfilled\n   *  - the value of the yield expression will be the fulfilled value\n   *  - it returns a promise for the return value (when the generator\n   *    stops iterating)\n   *  - the decorated function returns a promise for the return value\n   *    of the generator or the first rejected promise among those\n   *    yielded.\n   *  - if an error is thrown in the generator, it propagates through\n   *    every following yield until it is caught, or until it escapes\n   *    the generator function altogether, and is translated into a\n   *    rejection for the promise returned by the decorated generator.\n   */\n\n\n  Q.async = async;\n\n  function async(makeGenerator) {\n    return function () {\n      // when verb is \"send\", arg is a value\n      // when verb is \"throw\", arg is an exception\n      function continuer(verb, arg) {\n        var result; // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n        // engine that has a deployed base of browsers that support generators.\n        // However, SM's generators use the Python-inspired semantics of\n        // outdated ES6 drafts.  We would like to support ES6, but we'd also\n        // like to make it possible to use generators in deployed browsers, so\n        // we also support Python-style generators.  At some point we can remove\n        // this block.\n\n        if (typeof StopIteration === \"undefined\") {\n          // ES6 Generators\n          try {\n            result = generator[verb](arg);\n          } catch (exception) {\n            return reject(exception);\n          }\n\n          if (result.done) {\n            return Q(result.value);\n          } else {\n            return when(result.value, callback, errback);\n          }\n        } else {\n          // SpiderMonkey Generators\n          // FIXME: Remove this case when SM does ES6 generators.\n          try {\n            result = generator[verb](arg);\n          } catch (exception) {\n            if (isStopIteration(exception)) {\n              return Q(exception.value);\n            } else {\n              return reject(exception);\n            }\n          }\n\n          return when(result, callback, errback);\n        }\n      }\n\n      var generator = makeGenerator.apply(this, arguments);\n      var callback = continuer.bind(continuer, \"next\");\n      var errback = continuer.bind(continuer, \"throw\");\n      return callback();\n    };\n  }\n  /**\n   * The spawn function is a small wrapper around async that immediately\n   * calls the generator and also ends the promise chain, so that any\n   * unhandled errors are thrown instead of forwarded to the error\n   * handler. This is useful because it's extremely common to run\n   * generators at the top-level to work with libraries.\n   */\n\n\n  Q.spawn = spawn;\n\n  function spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n  } // FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n\n  /**\n   * Throws a ReturnValue exception to stop an asynchronous generator.\n   *\n   * This interface is a stop-gap measure to support generator return\n   * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n   * generators like Chromium 29, just use \"return\" in your generator\n   * functions.\n   *\n   * @param value the return value for the surrounding generator\n   * @throws ReturnValue exception with the value.\n   * @example\n   * // ES6 style\n   * Q.async(function* () {\n   *      var foo = yield getFooPromise();\n   *      var bar = yield getBarPromise();\n   *      return foo + bar;\n   * })\n   * // Older SpiderMonkey style\n   * Q.async(function () {\n   *      var foo = yield getFooPromise();\n   *      var bar = yield getBarPromise();\n   *      Q.return(foo + bar);\n   * })\n   */\n\n\n  Q[\"return\"] = _return;\n\n  function _return(value) {\n    throw new QReturnValue(value);\n  }\n  /**\n   * The promised function decorator ensures that any promise arguments\n   * are settled and passed as values (`this` is also settled and passed\n   * as a value).  It will also ensure that the result of a function is\n   * always a promise.\n   *\n   * @example\n   * var add = Q.promised(function (a, b) {\n   *     return a + b;\n   * });\n   * add(Q(a), Q(B));\n   *\n   * @param {function} callback The function to decorate\n   * @returns {function} a function that has been decorated.\n   */\n\n\n  Q.promised = promised;\n\n  function promised(callback) {\n    return function () {\n      return spread([this, all(arguments)], function (self, args) {\n        return callback.apply(self, args);\n      });\n    };\n  }\n  /**\n   * sends a message to a value in a future turn\n   * @param object* the recipient\n   * @param op the name of the message operation, e.g., \"when\",\n   * @param args further arguments to be forwarded to the operation\n   * @returns result {Promise} a promise for the result of the operation\n   */\n\n\n  Q.dispatch = dispatch;\n\n  function dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n  }\n\n  Promise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n      self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n  };\n  /**\n   * Gets the value of a property in a future turn.\n   * @param object    promise or immediate reference for target object\n   * @param name      name of property to get\n   * @return promise for the property value\n   */\n\n\n  Q.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n  };\n\n  Promise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n  };\n  /**\n   * Sets the value of a property in a future turn.\n   * @param object    promise or immediate reference for object object\n   * @param name      name of property to set\n   * @param value     new value of property\n   * @return promise for the return value\n   */\n\n\n  Q.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n  };\n\n  Promise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n  };\n  /**\n   * Deletes a property in a future turn.\n   * @param object    promise or immediate reference for target object\n   * @param name      name of property to delete\n   * @return promise for the return value\n   */\n\n\n  Q.del = // XXX legacy\n  Q[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n  };\n\n  Promise.prototype.del = // XXX legacy\n  Promise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n  };\n  /**\n   * Invokes a method in a future turn.\n   * @param object    promise or immediate reference for target object\n   * @param name      name of method to invoke\n   * @param value     a value to post, typically an array of\n   *                  invocation arguments for promises that\n   *                  are ultimately backed with `resolve` values,\n   *                  as opposed to those backed with URLs\n   *                  wherein the posted value can be any\n   *                  JSON serializable object.\n   * @return promise for the return value\n   */\n  // bound locally because it is used by other methods\n\n\n  Q.mapply = // XXX As proposed by \"Redsandro\"\n  Q.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n  };\n\n  Promise.prototype.mapply = // XXX As proposed by \"Redsandro\"\n  Promise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n  };\n  /**\n   * Invokes a method in a future turn.\n   * @param object    promise or immediate reference for target object\n   * @param name      name of method to invoke\n   * @param ...args   array of invocation arguments\n   * @return promise for the return value\n   */\n\n\n  Q.send = // XXX Mark Miller's proposed parlance\n  Q.mcall = // XXX As proposed by \"Redsandro\"\n  Q.invoke = function (object, name\n  /*...args*/\n  ) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n  };\n\n  Promise.prototype.send = // XXX Mark Miller's proposed parlance\n  Promise.prototype.mcall = // XXX As proposed by \"Redsandro\"\n  Promise.prototype.invoke = function (name\n  /*...args*/\n  ) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n  };\n  /**\n   * Applies the promised function in a future turn.\n   * @param object    promise or immediate reference for target function\n   * @param args      array of application arguments\n   */\n\n\n  Q.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n  };\n\n  Promise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n  };\n  /**\n   * Calls the promised function in a future turn.\n   * @param object    promise or immediate reference for target function\n   * @param ...args   array of application arguments\n   */\n\n\n  Q[\"try\"] = Q.fcall = function (object\n  /* ...args*/\n  ) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n  };\n\n  Promise.prototype.fcall = function ()\n  /*...args*/\n  {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n  };\n  /**\n   * Binds the promised function, transforming return values into a fulfilled\n   * promise and thrown errors into a rejected one.\n   * @param object    promise or immediate reference for target function\n   * @param ...args   array of application arguments\n   */\n\n\n  Q.fbind = function (object\n  /*...args*/\n  ) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n      return promise.dispatch(\"apply\", [this, args.concat(array_slice(arguments))]);\n    };\n  };\n\n  Promise.prototype.fbind = function ()\n  /*...args*/\n  {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n      return promise.dispatch(\"apply\", [this, args.concat(array_slice(arguments))]);\n    };\n  };\n  /**\n   * Requests the names of the owned properties of a promised\n   * object in a future turn.\n   * @param object    promise or immediate reference for target object\n   * @return promise for the keys of the eventually settled object\n   */\n\n\n  Q.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n  };\n\n  Promise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n  };\n  /**\n   * Turns an array of promises into a promise for an array.  If any of\n   * the promises gets rejected, the whole array is rejected immediately.\n   * @param {Array*} an array (or promise for an array) of values (or\n   * promises for values)\n   * @returns a promise for an array of the corresponding values\n   */\n  // By Mark Miller\n  // http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\n\n\n  Q.all = all;\n\n  function all(promises) {\n    return when(promises, function (promises) {\n      var pendingCount = 0;\n      var deferred = defer();\n      array_reduce(promises, function (undefined, promise, index) {\n        var snapshot;\n\n        if (isPromise(promise) && (snapshot = promise.inspect()).state === \"fulfilled\") {\n          promises[index] = snapshot.value;\n        } else {\n          ++pendingCount;\n          when(promise, function (value) {\n            promises[index] = value;\n\n            if (--pendingCount === 0) {\n              deferred.resolve(promises);\n            }\n          }, deferred.reject, function (progress) {\n            deferred.notify({\n              index: index,\n              value: progress\n            });\n          });\n        }\n      }, void 0);\n\n      if (pendingCount === 0) {\n        deferred.resolve(promises);\n      }\n\n      return deferred.promise;\n    });\n  }\n\n  Promise.prototype.all = function () {\n    return all(this);\n  };\n  /**\n   * Returns the first resolved promise of an array. Prior rejected promises are\n   * ignored.  Rejects only if all promises are rejected.\n   * @param {Array*} an array containing values or promises for values\n   * @returns a promise fulfilled with the value of the first resolved promise,\n   * or a rejected promise if all promises are rejected.\n   */\n\n\n  Q.any = any;\n\n  function any(promises) {\n    if (promises.length === 0) {\n      return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n      var promise = promises[index];\n      pendingCount++;\n      when(promise, onFulfilled, onRejected, onProgress);\n\n      function onFulfilled(result) {\n        deferred.resolve(result);\n      }\n\n      function onRejected(err) {\n        pendingCount--;\n\n        if (pendingCount === 0) {\n          var rejection = err || new Error(\"\" + err);\n          rejection.message = \"Q can't get fulfillment value from any promise, all \" + \"promises were rejected. Last error message: \" + rejection.message;\n          deferred.reject(rejection);\n        }\n      }\n\n      function onProgress(progress) {\n        deferred.notify({\n          index: index,\n          value: progress\n        });\n      }\n    }, undefined);\n    return deferred.promise;\n  }\n\n  Promise.prototype.any = function () {\n    return any(this);\n  };\n  /**\n   * Waits for all promises to be settled, either fulfilled or\n   * rejected.  This is distinct from `all` since that would stop\n   * waiting at the first rejection.  The promise returned by\n   * `allResolved` will never be rejected.\n   * @param promises a promise for an array (or an array) of promises\n   * (or values)\n   * @return a promise for an array of promises\n   */\n\n\n  Q.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\n\n  function allResolved(promises) {\n    return when(promises, function (promises) {\n      promises = array_map(promises, Q);\n      return when(all(array_map(promises, function (promise) {\n        return when(promise, noop, noop);\n      })), function () {\n        return promises;\n      });\n    });\n  }\n\n  Promise.prototype.allResolved = function () {\n    return allResolved(this);\n  };\n  /**\n   * @see Promise#allSettled\n   */\n\n\n  Q.allSettled = allSettled;\n\n  function allSettled(promises) {\n    return Q(promises).allSettled();\n  }\n  /**\n   * Turns an array of promises into a promise for an array of their states (as\n   * returned by `inspect`) when they have all settled.\n   * @param {Array[Any*]} values an array (or promise for an array) of values (or\n   * promises for values)\n   * @returns {Array[State]} an array of states for the respective values.\n   */\n\n\n  Promise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n      return all(array_map(promises, function (promise) {\n        promise = Q(promise);\n\n        function regardless() {\n          return promise.inspect();\n        }\n\n        return promise.then(regardless, regardless);\n      }));\n    });\n  };\n  /**\n   * Captures the failure of a promise, giving an oportunity to recover\n   * with a callback.  If the given promise is fulfilled, the returned\n   * promise is fulfilled.\n   * @param {Any*} promise for something\n   * @param {Function} callback to fulfill the returned promise if the\n   * given promise is rejected\n   * @returns a promise for the return value of the callback\n   */\n\n\n  Q.fail = // XXX legacy\n  Q[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n  };\n\n  Promise.prototype.fail = // XXX legacy\n  Promise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n  };\n  /**\n   * Attaches a listener that can respond to progress notifications from a\n   * promise's originating deferred. This listener receives the exact arguments\n   * passed to ``deferred.notify``.\n   * @param {Any*} promise for something\n   * @param {Function} callback to receive any progress notifications\n   * @returns the given promise, unchanged\n   */\n\n\n  Q.progress = progress;\n\n  function progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n  }\n\n  Promise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n  };\n  /**\n   * Provides an opportunity to observe the settling of a promise,\n   * regardless of whether the promise is fulfilled or rejected.  Forwards\n   * the resolution to the returned promise when the callback is done.\n   * The callback can return a promise to defer completion.\n   * @param {Any*} promise\n   * @param {Function} callback to observe the resolution of the given\n   * promise, takes no arguments.\n   * @returns a promise for the resolution of the given promise when\n   * ``fin`` is done.\n   */\n\n\n  Q.fin = // XXX legacy\n  Q[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n  };\n\n  Promise.prototype.fin = // XXX legacy\n  Promise.prototype[\"finally\"] = function (callback) {\n    if (!callback || typeof callback.apply !== \"function\") {\n      throw new Error(\"Q can't apply finally callback\");\n    }\n\n    callback = Q(callback);\n    return this.then(function (value) {\n      return callback.fcall().then(function () {\n        return value;\n      });\n    }, function (reason) {\n      // TODO attempt to recycle the rejection with \"this\".\n      return callback.fcall().then(function () {\n        throw reason;\n      });\n    });\n  };\n  /**\n   * Terminates a chain of promises, forcing rejections to be\n   * thrown as exceptions.\n   * @param {Any*} promise at the end of a chain of promises\n   * @returns nothing\n   */\n\n\n  Q.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n  };\n\n  Promise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function onUnhandledError(error) {\n      // forward to a future turn so that ``when``\n      // does not catch it and turn it into a rejection.\n      Q.nextTick(function () {\n        makeStackTraceLong(error, promise);\n\n        if (Q.onerror) {\n          Q.onerror(error);\n        } else {\n          throw error;\n        }\n      });\n    }; // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n\n\n    var promise = fulfilled || rejected || progress ? this.then(fulfilled, rejected, progress) : this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n      onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n  };\n  /**\n   * Causes a promise to be rejected if it does not get fulfilled before\n   * some milliseconds time out.\n   * @param {Any*} promise\n   * @param {Number} milliseconds timeout\n   * @param {Any*} custom error message or Error object (optional)\n   * @returns a promise for the resolution of the given promise if it is\n   * fulfilled before the timeout, otherwise rejected.\n   */\n\n\n  Q.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n  };\n\n  Promise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n      if (!error || \"string\" === typeof error) {\n        error = new Error(error || \"Timed out after \" + ms + \" ms\");\n        error.code = \"ETIMEDOUT\";\n      }\n\n      deferred.reject(error);\n    }, ms);\n    this.then(function (value) {\n      clearTimeout(timeoutId);\n      deferred.resolve(value);\n    }, function (exception) {\n      clearTimeout(timeoutId);\n      deferred.reject(exception);\n    }, deferred.notify);\n    return deferred.promise;\n  };\n  /**\n   * Returns a promise for the given value (or promised value), some\n   * milliseconds after it resolved. Passes rejections immediately.\n   * @param {Any*} promise\n   * @param {Number} milliseconds\n   * @returns a promise for the resolution of the given promise after milliseconds\n   * time has elapsed since the resolution of the given promise.\n   * If the given promise rejects, that is passed immediately.\n   */\n\n\n  Q.delay = function (object, timeout) {\n    if (timeout === void 0) {\n      timeout = object;\n      object = void 0;\n    }\n\n    return Q(object).delay(timeout);\n  };\n\n  Promise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n      var deferred = defer();\n      setTimeout(function () {\n        deferred.resolve(value);\n      }, timeout);\n      return deferred.promise;\n    });\n  };\n  /**\n   * Passes a continuation to a Node function, which is called with the given\n   * arguments provided as an array, and returns a promise.\n   *\n   *      Q.nfapply(FS.readFile, [__filename])\n   *      .then(function (content) {\n   *      })\n   *\n   */\n\n\n  Q.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n  };\n\n  Promise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n  };\n  /**\n   * Passes a continuation to a Node function, which is called with the given\n   * arguments provided individually, and returns a promise.\n   * @example\n   * Q.nfcall(FS.readFile, __filename)\n   * .then(function (content) {\n   * })\n   *\n   */\n\n\n  Q.nfcall = function (callback\n  /*...args*/\n  ) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n  };\n\n  Promise.prototype.nfcall = function ()\n  /*...args*/\n  {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n  };\n  /**\n   * Wraps a NodeJS continuation passing function and returns an equivalent\n   * version that returns a promise.\n   * @example\n   * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n   * .then(console.log)\n   * .done()\n   */\n\n\n  Q.nfbind = Q.denodeify = function (callback\n  /*...args*/\n  ) {\n    if (callback === undefined) {\n      throw new Error(\"Q can't wrap an undefined function\");\n    }\n\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n      var nodeArgs = baseArgs.concat(array_slice(arguments));\n      var deferred = defer();\n      nodeArgs.push(deferred.makeNodeResolver());\n      Q(callback).fapply(nodeArgs).fail(deferred.reject);\n      return deferred.promise;\n    };\n  };\n\n  Promise.prototype.nfbind = Promise.prototype.denodeify = function ()\n  /*...args*/\n  {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n  };\n\n  Q.nbind = function (callback, thisp\n  /*...args*/\n  ) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n      var nodeArgs = baseArgs.concat(array_slice(arguments));\n      var deferred = defer();\n      nodeArgs.push(deferred.makeNodeResolver());\n\n      function bound() {\n        return callback.apply(thisp, arguments);\n      }\n\n      Q(bound).fapply(nodeArgs).fail(deferred.reject);\n      return deferred.promise;\n    };\n  };\n\n  Promise.prototype.nbind = function ()\n  /*thisp, ...args*/\n  {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n  };\n  /**\n   * Calls a method of a Node-style object that accepts a Node-style\n   * callback with a given array of arguments, plus a provided callback.\n   * @param object an object that has the named method\n   * @param {String} name name of the method of object\n   * @param {Array} args arguments to pass to the method; the callback\n   * will be provided by Q and appended to these arguments.\n   * @returns a promise for the value or error\n   */\n\n\n  Q.nmapply = // XXX As proposed by \"Redsandro\"\n  Q.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n  };\n\n  Promise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\n  Promise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n  };\n  /**\n   * Calls a method of a Node-style object that accepts a Node-style\n   * callback, forwarding the given variadic arguments, plus a provided\n   * callback argument.\n   * @param object an object that has the named method\n   * @param {String} name name of the method of object\n   * @param ...args arguments to pass to the method; the callback will\n   * be provided by Q and appended to these arguments.\n   * @returns a promise for the value or error\n   */\n\n\n  Q.nsend = // XXX Based on Mark Miller's proposed \"send\"\n  Q.nmcall = // XXX Based on \"Redsandro's\" proposal\n  Q.ninvoke = function (object, name\n  /*...args*/\n  ) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n  };\n\n  Promise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\n  Promise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\n  Promise.prototype.ninvoke = function (name\n  /*...args*/\n  ) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n  };\n  /**\n   * If a function would like to support both Node continuation-passing-style and\n   * promise-returning-style, it can end its internal promise chain with\n   * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n   * elects to use a nodeback, the result will be sent there.  If they do not\n   * pass a nodeback, they will receive the result promise.\n   * @param object a result (or a promise for a result)\n   * @param {Function} nodeback a Node.js-style callback\n   * @returns either the promise or nothing\n   */\n\n\n  Q.nodeify = nodeify;\n\n  function nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n  }\n\n  Promise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n      this.then(function (value) {\n        Q.nextTick(function () {\n          nodeback(null, value);\n        });\n      }, function (error) {\n        Q.nextTick(function () {\n          nodeback(error);\n        });\n      });\n    } else {\n      return this;\n    }\n  };\n\n  Q.noConflict = function () {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n  }; // All code before this point will be filtered from stack traces.\n\n\n  var qEndingLine = captureLine();\n  return Q;\n});","var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\nrequire(\"setimmediate\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;","require(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\n(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    } // Copy function arguments\n\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    } // Store and register the task\n\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function onGlobalMessage(event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function registerImmediate(handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function registerImmediate(handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function registerImmediate(handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);"],"sourceRoot":""}