{"version":3,"sources":["webpack:///./src/pages/config.js"],"names":["styles","mainPadding","padding","mainSidePadding","mainPdf","display","justifyContent","mainTable","backgroundColor","border","borderRadius","boxShadow","position","backButton","cusor","label","fontWeight","langs","en","apiSection","title","style","description","target","href","succsess","fail","placeholder","adminSection","contactSection","tabTitle","nl","Config","microsoftTeams","initialize","state","apiKey","adminId","admins","admin","contacts","contact","keys","isNew","isOpen","handleChange","bind","submit","getOptions","handleContact","save","getAdmin","debounce","handleToken","handleAdmin","a","fetch","mode","method","body","JSON","stringify","path","key","res","json","console","log","error","this","setState","componentDidMount","window","getContext","context","tid","locale","map","k","c","content","company_name","value","id","e","event","name","v","lang","split","settings","setValidityState","registerOnSaveHandler","saveEvent","setSettings","websiteUrl","contentUrl","entityId","suggestedDisplayName","notifySuccess","render","theme","themes","teams","gap","vAlign","hAlign","onSubmit","width","icon","as","CloseIcon","AcceptIcon","items","onChange","clearable","length","fluid","search","open","noResultsMessage","onClick","m","cursor","disabled","React","Component"],"mappings":"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","file":"component---src-pages-config-js-5708ec20e25f1649b6cc.js","sourcesContent":["import React from 'react';\nimport debounce from 'debounce'\nimport { Provider, themes, Flex, FlexItem, Dropdown, Input, Header, Label} from '@fluentui/react-northstar';\nimport { CloseIcon, AcceptIcon } from '@fluentui/react-icons-northstar';\n\nconst styles={\n    mainPadding:{padding:\"0px 2em\"},\n    mainSidePadding:{padding:\"10px 2em\"},\n    mainPdf:{display:\"flex\", justifyContent:\"center\"},\n    mainTable:{\n        backgroundColor: \"#fff\",\n        border: \"1px solid #d8e2f0\",\n        borderRadius: \"4px\",\n        boxShadow: \"0 0 10px 0 rgba(19,29,41,.05)\",\n        position: \"relative\",\n        padding: \"0em 3em 2em\"\n    },\n    backButton:{\n        cusor:\"pointer\"\n    },\n    label:{\n        fontWeight:\"bold\"\n    }\n}\n\nconst langs={\n    en:{\n        apiSection:{\n            title: <label style={styles.label} >API Token</label>,\n            description:  <span>This is the API Token for you MoneyBird Account. You can generate one <a target=\"_blank\" href=\"https://moneybird.com/user/applications/new\">here</a> for personal use.</span>,\n            succsess: \"API Token IS vaild\",\n            fail: \"API Token NOT vaild\",\n            placeholder: 'API Token'\n        },\n        adminSection:{\n            title: <label style={styles.label} >Administration</label>,\n            description:<span>This is the administration you created your API Token for</span>,\n            placeholder: 'Administration'\n        },\n        contactSection:{\n            title:<label style={styles.label} >Contact</label>,\n            description: <span>The contact whos invoice's will show up on the invoices tabs</span>,\n            placeholder: 'Contact'\n        },\n        tabTitle:\"Moneybird Invoices\"\n    },\n    nl:{\n        apiSection:{\n            title:<label style={styles.label} >API token invoeren</label>,\n            description:  <span>Vul hier een API-token in van je Moneybird account. Je kunt <a target=\"_blank\" href=\"https://moneybird.com/user/applications/new\">hier</a> een API-token genereren. Vul een naam in die herkenbaar is voor deze connectie, bijvoorbeeld ‘Microsoft Teams Integratie’. Kies voor ‘API token voor persoonlijk gebruik’ en geef in ieder geval toegang voor alle onderdelen. Vervolgens verschijnt er een API-token in beeld. Vul deze hieronder in.</span>,\n            succsess: \"API-token niet geldig\",\n            fail: \"API-token IS geldig\",\n            placeholder: 'API token invoeren'\n        },\n        adminSection:{\n            title: <label style={styles.label} >Toediening</label>,\n            description:<span>Dit is de administratie van waaruit u contacten wilt bekijken</span>,\n            placeholder: \"Administratie\"\n        },\n        contactSection:{\n            title:<label style={styles.label} >Contact</label>,\n            description:  <span>Selecteer de Contact waarvan je de facturen wilt tonen in de Tab.</span>,\n            placeholder:\"contact\"\n        },\n        tabTitle:\"Moneybird facturen\"\n    }\n}\n\nclass Config extends React.Component{\n    constructor(){\n        super();\n        if(this.microsoftTeams)\n            this.microsoftTeams.initialize();\n        this.state ={\n            apiKey:\"\",\n            adminId:\"\",\n            admins:null,\n            admin:null,\n            contacts:null,\n            contact:null,\n            keys:[],\n            isNew:false,\n            isOpen: false\n\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.submit = this.submit.bind(this)\n        this.getOptions = this.getOptions.bind(this)\n        this.handleContact = this.handleContact.bind(this)\n        this.save = this.save.bind(this)\n        this.getAdmin = debounce(this.getAdmin,2000).bind(this)\n        this.handleToken = this.handleToken.bind(this)\n        this.handleAdmin = this.handleAdmin.bind(this)\n    }\n\n    async getAdmin(apiKey){\n        try{\n            const res = await fetch(\n                `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n                {\n                    mode:\"cors\",\n                    method:\"POST\",\n                    body: JSON.stringify({\n                        method:\"GET\",\n                        path:`administrations.json`,\n                        key: apiKey\n                    })\n                }\n            )\n            const json = await res.json()\n            console.log({json})\n            if(json.error)\n                this.setState({admins:false})\n            else\n                this.setState({admins:json})\n        }\n        catch(e){\n            console.log(e)\n        }\n    }\n\n    componentDidMount(){\n        this.microsoftTeams = window? window.microsoftTeams: null;\n        this.microsoftTeams.initialize();\n        this.microsoftTeams.getContext((async context=>{\n            const {tid, locale} = context;\n            try{\n                const res = await fetch(\n                    `https://moneybirdhandlerproxy.azurewebsites.net/api/key/${tid}`,\n                    {\n                        mode:\"cors\",\n                        method:\"GET\"\n                    }\n                )\n                const json = await res.json()\n                console.log({json})\n                this.setState({keys:json.map(k=>k.key), locale})\n    \n            }\n            catch(e){\n                console.log(\"BOOMER!\")\n                console.log(e)\n            }\n    }).bind(this))\n    }\n\n    getOptions(){\n        const {contacts} = this.state;\n        return contacts.map(c=>({content:c.company_name, value:c.id}))\n    }\n\n    handleContact(e, value){\n        this.setState({ contact: value.value }, this.save)\n    }\n\n    handleAdmin(e, value){\n        this.setState({ admin: value.value })\n        this.submit(value.value)\n    }\n\n  \n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n    handleToken(e, v){\n        console.log({e, v})\n        if(e){\n            this.setState({apiKey:e.target.value, isOpen: true})\n            this.getAdmin(e.target.value);\n        }\n        else if(v){\n            this.setState({apiKey:v.value, isOpen:false})\n            this.getAdmin(v.value );\n        }\n\n    }\n    async submit({value :adminId}){\n        console.log(adminId)\n        const {apiKey, isNew} = this.state;\n\n        this.microsoftTeams.initialize();\n        this.microsoftTeams.getContext(async context=>{\n            const {tid} = context;\n            try{\n                const res = await fetch(\n                    `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n                    {\n                        mode:\"cors\",\n                        method:\"POST\",\n                        body: JSON.stringify({\n                            method:\"GET\",\n                            path:`${adminId}/contacts.json`,\n                            key: apiKey,\n                            tid,\n                            isNew\n                        })\n                    }\n                )\n                const json = await res.json()\n                console.log({json})\n                this.setState({contacts:json})\n    \n            }\n            catch(e){\n                console.log(\"BOOM!\")\n                console.log(e)\n            }\n        })\n    }\n\n    save(){\n        \n        const {apiKey, admin:{value: adminId}, contact, locale} = this.state;\n        const lang = locale.split(\"-\")[0];\n\n        this.microsoftTeams.initialize();\n        this.microsoftTeams.settings.setValidityState(true);\n        this.microsoftTeams.settings.registerOnSaveHandler((saveEvent) => {\n            this.microsoftTeams.settings.setSettings({\n                websiteUrl: `https://jp5525.github.io/teams-demo/${lang}/`,\n                contentUrl: `https://jp5525.github.io/teams-demo/${lang}/`,\n                entityId: JSON.stringify({apiKey, adminId, contact}),\n                suggestedDisplayName: langs[lang].tabTitle\n            });\n            saveEvent.notifySuccess();\n        });\n    }\n\n    render(){\n        const {contacts, contact, admins, admin, apiKey, keys, isOpen, locale } = this.state;\n        const lang = locale? langs[locale.split(\"-\")[0]]: null\n        console.log({keys})\n        return (\n            lang?\n                <Provider theme={themes.teams}>\n                    <div style={styles.mainPadding}>\n                        <div style={styles.mainTable}>\n                            <Header content=\"MoneyBird Opstelling\" />\n                            <Flex gap=\"gap.small\" vAlign=\"center\" hAlign=\"start\">\n                                <FlexItem justifyContent=\"center\">\n                                    <form onSubmit={this.submit} style={{width:\"100%\"}}>\n                                        \n                                        {lang.apiSection.title} <br/>\n                                        {lang.apiSection.description}\n                                        {admins== false? <> <br/><Label content={lang.apiSection.fail} icon={{as: CloseIcon}}/></> : null}\n                                        {admins? <> <br/><Label content={lang.apiSection.succsess} icon={{as: AcceptIcon}}/></> : null}\n                                        <Dropdown\n                                            items={keys}\n                                            placeholder={lang.apiSection.placeholder}\n                                            onChange={this.handleToken}\n                                            name=\"apiKey\"\n                                            id=\"apiKey\"\n                                            clearable={apiKey && apiKey.length>0}\n                                            fluid={true}\n                                            search={true}\n                                            open={isOpen}\n                                            noResultsMessage={{\n                                                content:`Add... ${apiKey}`, \n                                                onClick: m=>{\n                                                    this.setState({isNew:true, keys:[apiKey, ...keys], isOpen:false}, this.getAdmin(apiKey))\n                                                    \n                                                }, \n                                                style:{cursor: \"pointer\"}\n                                            }}\n                                        />\n                                        \n                                        <br />\n\n                                        {lang.adminSection.title} <br/>\n                                        {lang.adminSection.description}\n                                        <Dropdown\n                                            items={admins? admins.map(a=>({content:a.name, value:a.id})): []}\n                                            value={admin? admin.content : null}\n                                            placeholder={lang.adminSection.placeholder}\n                                            onChange={this.handleAdmin}\n                                            name=\"Admin\"\n                                            disabled={admins? false: true}\n                                            fluid={true}\n                                            />\n\n                                        <br />\n\n                                        {lang.contactSection.title} <br/>\n                                        {lang.contactSection.description}\n                                        <Dropdown\n                                            items={contacts? this.getOptions(): []}\n                                            value={contact? contact.content : null}\n                                            placeholder={lang.contactSection.placeholder}\n                                            onChange={this.handleContact}\n                                            name=\"contact\"\n                                            disabled={contacts? false: true}\n                                            />\n                \n                                    </form>\n                                </FlexItem>\n                            </Flex>\n                        </div>\n                    </div>\n                </Provider>:\n                null\n            \n            \n        )\n\n    }\n}\n\nexport default Config;\n"],"sourceRoot":""}