{"version":3,"sources":["webpack:///./src/pages/invoices.js"],"names":["pdfjs","GlobalWorkerOptions","workerSrc","version","FreeDownloadIcon","class","FreeChevronLeft","styles","mainPadding","mainSidePadding","padding","mainPdf","display","justifyContent","flexDirection","mainTable","backgroundColor","border","borderRadius","boxShadow","position","backButton","cusor","arrow","cursor","download","transform","mainHeader","money","fontWeight","color","table","headCells","style","rows","borderBottomStyle","borderBottomWidth","borderBottomColor","localMoney","locale","currency","amount","Intl","NumberFormat","format","langs","en","tableHeadings","invoiceId","reference","date","status","statuses","open","className","draft","paid","late","payLabel","payButton","nl","downloadPdf","ab","fileName","blob","Blob","type","FileSaver","saveAs","IndexPage","state","invoices","crrInvoice","apiKey","adminId","crrRow","loading","numOfPages","setActive","bind","clearActive","onDownloadMain","onDownloadRow","fetchPdf","onDocumentLoadSuccess","pdfId","a","this","fetch","mode","method","body","JSON","stringify","path","key","res","arrayBuffer","r","e","setState","id","pdf","invoice_id","numPages","componentDidMount","microsoftTeams","window","initialize","getContext","entityId","parse","contactId","contact","value","json","render","lang","split","columns","name","selector","sortable","maxWidth","minWidth","right","cell","total_price_incl_tax","width","center","ignoreRowClick","primary","circular","icon","as","onClick","theme","themes","teams","margin","marginBottom","fill","marginLeft","console","log","language","country","toLowerCase","total_unpaid","target","href","payment_url","textAlign","size","content","paddingBottom","file","onLoadSuccess","Array","from","el","index","pageNumber","length","zIndex","data","onRowClicked","pointerOnHover","highlightOnHover","noHeader","customStyles","React","Component"],"mappings":"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","file":"component---src-pages-invoices-js-3dcf529b9232e5cc751e.js","sourcesContent":["import React from 'react';\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport FileSaver from 'file-saver';\nimport Loader from \"../components/Loader\"\nimport '../assets/sass/main.scss';\nimport { Provider, themes, Button} from '@fluentui/react-northstar';\nimport { ArrowLeftIcon, DownloadIcon, ChevronStartIcon } from '@fluentui/react-icons-northstar';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst FreeDownloadIcon = ()=> <span class=\"lnr lnr-download\"></span>\nconst FreeChevronLeft = ()=> <span class=\"lnr lnr-chevron-left\"></span>\nconst styles={\n    mainPadding:null,\n    mainSidePadding:{padding:\"15px 1em\"},\n    mainPdf:{\n        display:\"flex\", \n        justifyContent:\"center\",\n        flexDirection:\"column\"\n    },\n    mainTable:{\n        backgroundColor: \"#fff\",\n        border: \"1px solid #d8e2f0\",\n        borderRadius: \"4px\",\n        boxShadow: \"0 0 10px 0 rgba(19,29,41,.05)\",\n        position: \"relative\",\n    },\n    backButton:{\n        cusor:\"pointer\"\n    },\n    arrow:{\n        display: \"inline-block\",\n        padding: \"3px\",\n        cursor: \"pointer\"\n    },\n    \n    download:{\n        transform: \"scale(1.5)\",\n        border: \"none\"\n    },\n    mainHeader:{\n        display:\"flex\",\n        justifyContent:\"space-between\"\n    },\n    money:{\n        fontWeight: \"bold\",\n        color: \"#605E5C\"\n    },\n    table:{\n        headCells: {\n            style: {\n              fontWeight:\"bold\"\n            },\n          },\n          rows: {\n            style: {\n              '&:not(:last-of-type)': {\n                borderBottomStyle: 'solid',\n                borderBottomWidth: '2px',\n                borderBottomColor: \"#F2F2F2\"\n            }\n    }\n}\n    }\n}\n\nconst localMoney = (locale, currency, amount) =>new Intl.NumberFormat(locale, { style: 'currency', currency }).format(amount)\n\nconst langs ={\n    en:{\n        tableHeadings:{\n            invoiceId:\"Invoice id\",\n            reference:\"Reference\",\n            date:\"Invoice date\",\n            amount:\"Amount\",\n            status:\"Status\"\n        },\n        statuses:{\n            open:<div className=\"state-label state-label--full-width state-label--warning\"><span className=\"state-label__text\">Open</span></div>,\n            draft:<div className=\"state-label state-label--full-width state-label--warning\"><span className=\"state-label__text\">Draft</span></div>,\n            paid:<div className=\"state-label state-label--full-width state-label--paid\"><span className=\"state-label__text\">Paid</span></div>,\n            late:<div className=\"state-label state-label--full-width state-label--late\"><span className=\"state-label__text\">Late</span></div>,\n        },\n        payLabel:(locale, currency, amount) => <span style={styles.money}>Amount payable: {localMoney(locale, currency, amount)}</span>,\n        payButton:\"Pay Now\"\n    },\n    nl:{\n        tableHeadings:{\n            invoiceId:\"Factuurnummer\",\n            reference:\"Kenmerk\",\n            date:\"Factuurdatum\",\n            amount:\"Bedrag\",\n            status:\"Status\"\n        },\n        statuses:{\n            draft:<div className=\"state-label state-label--full-width state-label--warning\"><span className=\"state-label__text\">Ontwerp</span></div>,\n            open:<div className=\"state-label state-label--full-width state-label--warning\"><span className=\"state-label__text\">Openstaand</span></div>,\n            paid:<div className=\"state-label state-label--full-width state-label--paid\"><span className=\"state-label__text\">Betaald</span></div>,\n            late:<div className=\"state-label state-label--full-width state-label--late\"><span className=\"state-label__text\">Verlopen</span></div>,\n        },\n        payLabel:(locale, currency, amount)=> <span style={styles.money}>Te betalen bedrag: {localMoney(locale, currency, amount)}</span>,\n        payButton:\"Nu betalen\"\n    }\n}\nconst downloadPdf = (ab, fileName) =>{\n    var blob = new Blob([ab], {type: \"application/pdf\"});\n    FileSaver.saveAs(blob, fileName);\n}\n\nclass IndexPage extends React.Component{\n \n    constructor(){\n        super()\n        this.state= {\n            invoices:null,\n            crrInvoice:null,\n            apiKey:null,\n            adminId: null,\n            crrRow: null,\n            loading:false,\n            numOfPages:null,\n            locale:null\n        }\n        this.setActive= this.setActive.bind(this)\n        this.clearActive = this.clearActive.bind(this)\n        this.onDownloadMain = this.onDownloadMain.bind(this)\n        this.onDownloadRow = this.onDownloadRow.bind(this)\n        this.fetchPdf = this.fetchPdf.bind(this)\n        this.onDocumentLoadSuccess = this.onDocumentLoadSuccess.bind(this)\n    }\n    async fetchPdf(pdfId){\n         const {apiKey, adminId} = this.state;\n         \n         const res = await fetch(\n             `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n             {\n                 mode:\"cors\",\n                 method:\"POST\",\n                 body: JSON.stringify({\n                     method:\"GET\",\n                     path:`${adminId}/sales_invoices/${pdfId}/download_pdf.json`,\n                     key: apiKey\n                 })\n             }\n         )\n         return await res.arrayBuffer();\n    }\n    async setActive(r, e){\n        this.setState({loading:true})\n        const pdf = await this.fetchPdf(r.id)\n        this.setState({crrInvoice:pdf, crrRow: r, loading:false })\n    }\n    onDownloadMain(){\n        const {crrInvoice, crrRow} = this.state;\n        downloadPdf(crrInvoice, `${crrRow.invoice_id}.pdf`)\n    }\n    async onDownloadRow(r)\n    {\n       this.setState({loading:true})\n       const pdf = await this.fetchPdf(r.id);\n       this.setState({loading:false })\n       downloadPdf(pdf, `${r.invoice_id}.pdf`)\n    }\n    clearActive(){\n        this.setState({crrInvoice:null})\n    }\n    onDocumentLoadSuccess({ numPages }){\n        this.setState({ numOfPages:numPages });\n    }\n   componentDidMount(){\n        this.microsoftTeams = window? window.microsoftTeams: null;\n        if(this.microsoftTeams){\n            this.microsoftTeams.initialize();\n            this.microsoftTeams.getContext(async ({entityId, locale}) =>{\n                const {apiKey, adminId, contact:{value :contactId}} = JSON.parse(entityId);\n                const res = await fetch(\n                    `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n                    {\n                        mode:\"cors\",\n                        method:\"POST\",\n                        body: JSON.stringify({\n                            method:\"GET\",\n                            path:`${adminId}/sales_invoices.json?filter=contact_id:${contactId}`,\n                            key: apiKey\n                        })\n                    }\n                )\n                const json = await res.json();\n                this.setState({\n                    invoices: json,\n                    adminId,\n                    apiKey,\n                    loading: false,\n                    locale\n                })\n            })\n        }\n    }\n\n    render(){\n        const {crrInvoice, invoices, loading, numOfPages, locale, crrRow} = this.state;\n        if(!locale) return  <Loader loading={loading}/>\n\n        const lang = langs[locale.split(\"-\")[0]]\n        if(!lang) return <p>Sorry, it doesnt look like we have a translation for {locale.split(\"-\")[0]}</p>\n\n        const columns =[\n            {\n                name:lang.tableHeadings.invoiceId,\n                selector:\"invoice_id\",\n                sortable: true\n            },\n            {\n                name:lang.tableHeadings.reference,\n                selector:\"reference\",\n                sortable: true\n            },\n            {\n                name:lang.tableHeadings.date,\n                selector:\"invoice_date\",\n                sortable: true,\n                maxWidth:\"15%\",\n                minWidth:\"100px\"\n            },\n            {\n                name:lang.tableHeadings.amount,\n                selector:\"total_unpaid\",\n                sortable: true,\n                maxWidth:\"12%\",\n                minWidth:\"125px\",\n                right:true,\n                cell: ({total_price_incl_tax, currency})=> localMoney(locale, currency, total_price_incl_tax)\n            },\n            {\n                name:lang.tableHeadings.status,\n                selector:\"state\",\n                sortable: true,\n                width: \"10%\",\n                cell: r=>lang.statuses[r.state]\n            },\n            {\n                name: \"Download\",\n                maxWidth:\"2%\",\n                center:true,\n                ignoreRowClick:true,\n                cell: r=><Button primary circular icon={{as:FreeDownloadIcon, styles:{width:\"16px\"}}} onClick={()=>this.onDownloadRow(r)}/>\n            }\n           \n        ]\n        return (\n            \n            <Provider theme={themes.teams}>\n               {\n                    crrInvoice ? \n                    <div style={styles.mainPdf}>\n                        <div style={{margin:\"auto\", width:\"595px\", marginBottom: \"15px\", display:'flex', justifyContent:\"space-between\"}}>\n                            <div>\n                                <Button primary circular icon={{as:FreeChevronLeft, styles:{width:\"16px\"}}} style={{fill:\"white\"}} onClick={this.clearActive}/>\n                                <Button primary circular icon={{as:FreeDownloadIcon, styles:{width:\"16px\"}}} style={{fill:\"white\", marginLeft: \"5px\"}} onClick={this.onDownloadMain}/>\n                            </div>\n                            {crrRow.state!= \"paid\"?<div style={styles.mainPdf}>\n                                {console.log(crrRow)}\n                                {lang.payLabel(`${crrRow.language}-${crrRow.contact.country.toLowerCase()}`, crrRow.currency,  crrRow.total_unpaid)}<br/>\n                                <a target=\"_blank\" href={crrRow.payment_url} style={{textAlign:\"center\"}}><Button size=\"large\" style={{backgroundColor:\"#38B8A0\", color:\"white\"}} content={lang.payButton} /></a>\n                            </div>:null}\n                            <div>\n                                {lang.statuses[crrRow.state]}\n                            </div>\n                        </div>\n                        <div style={{margin:\"auto\", paddingBottom:\"36px\"}}>\n                            <Document file={crrInvoice} onLoadSuccess={this.onDocumentLoadSuccess}>\n                            {\n                                Array.from(\n                                new Array(numOfPages),\n                                (el, index) => (\n                                    <Page\n                                    key={`page_${index + 1}`}\n                                    pageNumber={index + 1}\n                                    />\n                                ),\n                                )\n                            }\n                            </Document>\n                        </div>\n                    </div>\n                    :\n                    invoices.length > 0?\n                    <div style={styles.mainPadding}>\n                        <div style={styles.mainTable}>\n                            <Loader loading={loading} style={{zIndex: 100}} />\n                            <DataTable\n                                columns={columns}\n                                data={invoices? invoices:[]}\n                                onRowClicked={this.setActive}\n                                pointerOnHover={true}\n                                highlightOnHover={true}\n                                noHeader={true}\n                                customStyles={styles.table}\n                                \n                            />\n                        </div>\n                    </div>\n                    :\n                    null\n                }\n\n            </Provider>\n        )\n    }\n  \n}\n\nexport default IndexPage;\n"],"sourceRoot":""}