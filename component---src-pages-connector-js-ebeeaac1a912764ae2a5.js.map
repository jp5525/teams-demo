{"version":3,"sources":["webpack:///./src/pages/connector.js"],"names":["isNilOrEmpty","str","length","styles","mainPadding","padding","mainSidePadding","mainPdf","display","justifyContent","mainTable","backgroundColor","border","borderRadius","boxShadow","position","backButton","cusor","label","fontWeight","langs","en","heading","apiSection","title","style","description","target","href","succsess","fail","placeholder","show","contactSection","typeSection","deleteDialog","cancel","confirm","header","message","x","tabs","nl","Config","microsoftTeams","initialize","state","apiKey","adminId","admins","admin","contacts","contact","loadingContacts","keys","isNew","isOpen","isContactsOpen","locale","tabType","showApiKeys","loaded","setUpWebhook","bind","deleteKeyFromDb","createKeyEntry","componentDidMount","a","this","window","getContext","context","tid","fetch","mode","method","res","json","console","log","map","k","content","cursor","class","onClick","setState","deleteKey","key","getAdmin","v","settings","registerOnSaveHandler","saveEvent","entityId","teamId","channelId","setSettings","contentUrl","configName","getSettings","webhookUrl","filter","handleToken","render","lang","split","theme","themes","teams","gap","vAlign","hAlign","width","background","color","marginTop","marginBottom","items","onOpenChange","name","id","clearable","fluid","search","open","searchQuery","itemToString","i","onSearchQueryChange","e","noResultsMessage","m","active","cancelButton","onCancel","confirmButton","onConfirm","backdrop","React","Component"],"mappings":"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","file":"component---src-pages-connector-js-ebeeaac1a912764ae2a5.js","sourcesContent":["import React from 'react';\nimport { Provider, themes, Flex, FlexItem, Dropdown, RadioGroup, Header, Label, Button, Dialog} from '@fluentui/react-northstar';\nimport { BanIcon, AcceptIcon } from '@fluentui/react-icons-northstar';\n\nconst isNilOrEmpty = str => str==null || str.length == 0\n\nconst styles={\n    mainPadding:{padding:\"0px 2em\"},\n    mainSidePadding:{padding:\"10px 2em\"},\n    mainPdf:{display:\"flex\", justifyContent:\"center\"},\n    mainTable:{\n        backgroundColor: \"#fff\",\n        border: \"1px solid #d8e2f0\",\n        borderRadius: \"4px\",\n        boxShadow: \"0 0 10px 0 rgba(19,29,41,.05)\",\n        position: \"relative\",\n        padding: \"0em 3em 2em\"\n    },\n    backButton:{\n        cusor:\"pointer\"\n    },\n    label:{\n        fontWeight:\"bold\"\n    }\n}\n\nconst langs={\n    en:{\n        heading:\"Moneybird Configuration\",\n        apiSection:{\n            title: <label style={styles.label} >API Token</label>,\n            description:  <span>This is the API Token for you MoneyBird Account. You can generate one <a target=\"_blank\" href=\"https://moneybird.com/user/applications/new\">here</a> for personal use.</span>,\n            succsess: \"API Token is vaild\",\n            fail: \"API Token NOT vaild\",\n            placeholder: 'API Token',\n            show:\"Click to choose another api key\"\n        },\n        contactSection:{\n            title:<label style={styles.label} >Contact</label>,\n            description: <span>The contact whos data will show up on the tab</span>,\n            placeholder: 'Choose a Contact'\n        },\n        typeSection:{\n            title:<label style={styles.label} >Data Type</label>,\n            description: <span>The type of data to show on the tab</span>,\n           \n        },\n        deleteDialog:{\n            cancel: \"Cancel\",\n            confirm: \"Yes\",\n            header:\"Delete API Key\",\n            message: x=>`Are you sure you want to delete ${x}`,\n\n        },\n        tabs:[\"Invoices\", \"Quotes\"]\n    },\n    nl:{\n        heading:\"Moneybird Koppelen\",\n        apiSection:{\n            title:<label style={styles.label} >API token invoeren</label>,\n            description:  <span>Vul hier een API-token in van je Moneybird account. Je kunt <a target=\"_blank\" href=\"https://moneybird.com/user/applications/new\">hier</a> een API-token genereren. Vul een naam in die herkenbaar is voor deze connectie, bijvoorbeeld ‘Microsoft Teams Integratie’. Kies voor ‘API token voor persoonlijk gebruik’ en geef toegang voor alle onderdelen. Vervolgens verschijnt er een API-token in beeld. Vul deze hieronder in.</span>,\n            succsess: \"API-token is geldig\",\n            fail: \"API-token niet geldig\",\n            placeholder: 'API token invoeren',\n            show:\"Klik om een ​​andere API-sleutel te kiezen\"\n        },\n        contactSection:{\n            title:<label style={styles.label} >Contact</label>,\n            description:  <span>Selecteer de Contact waarvan je de gegevens wilt tonen in de Tab.</span>,\n            placeholder:\"Kies een Contact\"\n        },\n        typeSection:{\n            title:<label style={styles.label} >Data Type</label>,\n            description: <span>Het type gegevens dat op het tabblad moet worden weergegeven</span>,\n           \n        },\n        deleteDialog:{\n            cancel: \"Annuleren\",\n            confirm: \"Ja\",\n            header:\"API-sleutel verwijderen\",\n            message: x=>`Weet je zeker dat je wilt verwijderen ${x}`,\n\n        },\n        tabs:[\"Facturen\", \"Offertes\"]\n    }\n}\n\nclass Config extends React.Component{\n    constructor(){\n        super();\n        if(this.microsoftTeams)\n            this.microsoftTeams.initialize();\n        this.state ={\n            apiKey:null,\n            adminId:null,\n            admins:null,\n            admin:null,\n            contacts:null,\n            contact:null,\n            loadingContacts:false,\n            keys:[],\n            isNew:false,\n            isOpen: false,\n            isContactsOpen: false,\n            locale:null,\n            tabType:\"invoices\",\n            showApiKeys: false,\n            loaded: false\n        }\n        \n        this.setUpWebhook = this.setUpWebhook.bind(this)\n        this.deleteKeyFromDb=this.deleteKeyFromDb.bind(this)\n        this.createKeyEntry=this.createKeyEntry.bind(this)\n    }\n\n    async componentDidMount(){\n        this.microsoftTeams = window? window.microsoftTeams: null;\n        this.microsoftTeams.initialize();\n        this.microsoftTeams.getContext((async context=>{\n            const {tid, locale} = context;\n            \n            try{\n                const res = await fetch(\n                    `https://moneybirdhandlerproxy.azurewebsites.net/api/key/${tid}`,\n                    {\n                        mode:\"cors\",\n                        method:\"GET\"\n                    }\n                )\n                const json = await res.json()\n                console.log({json})\n                const keys = json.map(k=>({\n                    content: <div>\n                        <span style={{cursor:\"pointer\"}} class=\"lnr lnr-trash\" onClick={()=>this.setState({deleteKey:k.key, isOpen:false})}></span> - <span style={{cursor:\"pointer\"}} onClick={()=>this.setUpWebhook(k.key)}>{k.key}</span>\n                    </div>,\n                    key: k.key\n                }));\n                const apiKey = json[0].key\n                const showApiKeys = isNilOrEmpty(apiKey)\n                this.setState({keys, apiKey, showApiKeys, tid, locale})\n\n                if(showApiKeys == false){\n                    this.getAdmin(apiKey)\n                }\n    \n            }\n            catch(e){\n                console.log(\"BOO\")\n                console.log(e)\n            }\n    }).bind(this))\n    }\n    \n    setUpWebhook(v){\n        this.setState({apiKey:v, isOpen:false})\n        \n        this.microsoftTeams.initialize();\n        this.microsoftTeams.settings.registerOnSaveHandler((saveEvent=>{\n            this.microsoftTeams.getContext((context=>{\n                const {teamId, channelId} = context;\n                const contentUrl = `https://jp5525.github.io/teams-demo/connector`;\n                const entityId = `connector-moneybird-${teamId}-${channelId}`;\n\n                this.microsoftTeams.settings.setSettings({\n                    contentUrl,\n                    entityId,\n                    configName:\"MoneyBird Invoices\"\n                });\n\n                this.microsoftTeams.settings.getSettings(settings=>{\n                    const { webhookUrl } = settings;\n\n                    \n                })\n\n            }).bind(this))\n        }).bind(this))\n    }\n\n    async deleteKeyFromDb(){\n        const {deleteKey, keys} = this.state;\n        if(!isNilOrEmpty(deleteKey)){\n            await fetch(\n                `https://moneybirdhandlerproxy.azurewebsites.net/api/key/${deleteKey}`,\n                {\n                    mode:\"cors\",\n                    method:\"DELETE\",\n                }\n            );\n            this.setState({deleteKey:null, apiKey:\"\", keys:keys.filter(x=>x.key != deleteKey)})\n        }\n    }\n    createKeyEntry(k){\n        return {\n            content:<div>\n                <span style={{cursor:\"pointer\"}} class=\"lnr lnr-trash\" onClick={()=>this.setState({deleteKey:k})}></span> - <span style={{cursor:\"pointer\"}} onClick={()=>this.handleToken(k)}>{k}</span>\n            </div>,\n            key:k\n        }\n    }\n\n    render(){\n        const {contacts, contact, admins, admin, apiKey, keys, isOpen, locale, loadingContacts, showApiKeys, deleteKey } = this.state;\n        console.log({locale})\n        const lang = locale? langs[locale.split(\"-\")[0]]: null\n        const radioOptions = lang? [\n            {\n              key: 'invoices',\n              value: 'invoices',\n              name: 'invoices',\n              label: lang.tabs[0],\n              onClick:()=>this.setState({tabType:\"invoices\"})\n            },\n            {\n              key: 'quotes',\n              name: 'quotes',\n              value: 'quotes',\n              label: lang.tabs[1],\n              onClick:()=>this.setState({tabType:\"quotes\"})\n            }\n          ]: null\n\n        return (\n            lang?\n                <Provider theme={themes.teams}>\n                    <div style={styles.mainPadding}>\n                        <div style={styles.mainTable}>\n                            <Header content={lang.heading}/>\n                            <Flex gap=\"gap.small\" vAlign=\"center\" hAlign=\"start\">\n                                <FlexItem justifyContent=\"center\">\n                                    <form  style={{width:\"100%\"}}>\n                                        \n                                        {lang.apiSection.title} <br/>\n                                        {lang.apiSection.description}\n                                        {admins== false? <> <br/><Label content={lang.apiSection.fail} style={{background:\"#cc4a31\", color:\"white\", marginTop: \"10px\", marginBottom:\"10px\"}}/></> : null}\n                                        {admins? <> <br/><Label content={lang.apiSection.succsess} style={{background:\"#7fba00\", color:\"white\", marginTop: \"10px\", marginBottom:\"10px\"}} /></> : null}\n                                        {<Dropdown\n                                            items={keys}\n                                            placeholder={lang.apiSection.placeholder}\n                                            onOpenChange={()=>this.setState({isOpen:!isOpen})}\n                                            name=\"apiKey\"\n                                            id=\"apiKey\"\n                                            clearable={apiKey && apiKey.length>0}\n                                            fluid={true}\n                                            search={true}\n                                            open={isOpen}\n                                            searchQuery={apiKey}\n                                            itemToString={i=> i? i.key : null}\n                                            onSearchQueryChange={(e, v)=>this.setState({apiKey:v.searchQuery})}\n                                            noResultsMessage={{\n                                                content:`Add... ${apiKey}`, \n                                                onClick: m=>{\n                                                    this.setState({isNew:true, keys:[this.createKeyEntry(apiKey), ...keys], isOpen:false})\n                                                    \n                                                }, \n                                                style:{cursor: \"pointer\"},\n                                                active: true\n                                            }}\n                                        />\n                                        }\n                                        <Dialog\n                                            cancelButton={lang.deleteDialog.cancel}\n                                            onCancel={()=>this.setState({deleteKey:null})}\n                                            confirmButton={lang.deleteDialog.confirm}\n                                            onConfirm={this.deleteKeyFromDb}\n                                            content={lang.deleteDialog.message(deleteKey)}\n                                            header={lang.deleteDialog.header}\n                                            open={!isNilOrEmpty(deleteKey)}\n                                            backdrop={true} \n                                        />\n                                        \n                                      \n                                    </form>\n                                </FlexItem>\n                            </Flex>\n                        </div>\n                    </div>\n                \n                </Provider>:\n                null\n            \n            \n        )\n\n    }\n}\n\nexport default Config;\n"],"sourceRoot":""}