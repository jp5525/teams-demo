{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["pdfjs","GlobalWorkerOptions","workerSrc","version","styles","mainPadding","mainSidePadding","padding","mainPdf","display","justifyContent","mainTable","backgroundColor","border","borderRadius","boxShadow","position","backButton","cusor","arrow","borderWidth","cursor","download","transform","mainHeader","downloadPdf","ab","fileName","blob","Blob","type","FileSaver","saveAs","IndexPage","state","invoices","crrInvoice","apiKey","adminId","crrRow","loading","numOfPages","setActive","bind","clearActive","onDownloadMain","onDownloadRow","fetchPdf","onDocumentLoadSuccess","pdfId","a","this","fetch","mode","method","body","JSON","stringify","path","key","res","arrayBuffer","r","e","setState","id","pdf","invoice_id","numPages","componentDidMount","microsoftTeams","window","initialize","getContext","entityId","parse","contactId","contact","value","json","render","columns","name","selector","sortable","maxWidth","minWidth","right","width","cell","className","center","onClick","ignoreRowClick","style","file","onLoadSuccess","Array","from","el","index","pageNumber","data","onRowClicked","pointerOnHover","highlightOnHover","noHeader","React","Component"],"mappings":"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","file":"component---src-pages-index-js-ce49a209c4b0062ecaeb.js","sourcesContent":["import React from 'react';\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport FileSaver from 'file-saver';\nimport Loader from \"../components/Loader\"\nimport '../assets/sass/main.scss';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst styles={\n    mainPadding:null,\n    mainSidePadding:{padding:\"15px 1em\"},\n    mainPdf:{display:\"flex\", justifyContent:\"center\"},\n    mainTable:{\n        backgroundColor: \"#fff\",\n        border: \"1px solid #d8e2f0\",\n        borderRadius: \"4px\",\n        boxShadow: \"0 0 10px 0 rgba(19,29,41,.05)\",\n        position: \"relative\",\n    },\n    backButton:{\n        cusor:\"pointer\"\n    },\n    arrow:{\n        \n        border: \"solid black\",\n        borderWidth: \"0 4px 4px 0\",\n        display: \"inline-block\",\n        padding: \"3px\",\n        cursor: \"pointer\"\n    },\n    \n    download:{\n        transform: \"scale(1.5)\",\n        border: \"none\"\n    },\n    mainHeader:{\n        display:\"flex\",\n        justifyContent:\"space-between\"\n    }\n}\n\nconst downloadPdf = (ab, fileName) =>{\n    var blob = new Blob([ab], {type: \"application/pdf\"});\n    FileSaver.saveAs(blob, fileName);\n}\n\nclass IndexPage extends React.Component{\n \n    constructor(){\n        super()\n        this.state= {\n            invoices:null,\n            crrInvoice:null,\n            apiKey:null,\n            adminId: null,\n            crrRow: null,\n            loading:true,\n            numOfPages:null\n        }\n        this.setActive= this.setActive.bind(this)\n        this.clearActive = this.clearActive.bind(this)\n        this.onDownloadMain = this.onDownloadMain.bind(this)\n        this.onDownloadRow = this.onDownloadRow.bind(this)\n        this.fetchPdf = this.fetchPdf.bind(this)\n        this.onDocumentLoadSuccess = this.onDocumentLoadSuccess.bind(this)\n    }\n\n    async fetchPdf(pdfId){\n         const {apiKey, adminId} = this.state;\n         \n         const res = await fetch(\n             `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n             {\n                 mode:\"cors\",\n                 method:\"POST\",\n                 body: JSON.stringify({\n                     method:\"GET\",\n                     path:`${adminId}/sales_invoices/${pdfId}/download_pdf.json`,\n                     key: apiKey\n                 })\n             }\n         )\n         return await res.arrayBuffer();\n    }\n\n    async setActive(r, e){\n        this.setState({loading:true})\n        const pdf = await this.fetchPdf(r.id)\n        this.setState({crrInvoice:pdf, crrRow: r, loading:false })\n    }\n\n    onDownloadMain(){\n        const {crrInvoice, crrRow} = this.state;\n        downloadPdf(crrInvoice, `${crrRow.invoice_id}.pdf`)\n    }\n    async onDownloadRow(r)\n    {\n       this.setState({loading:true})\n       const pdf = await this.fetchPdf(r.id);\n       this.setState({loading:false })\n       downloadPdf(pdf, `${r.invoice_id}.pdf`)\n    }\n    clearActive(){\n        this.setState({crrInvoice:null})\n    }\n\n    onDocumentLoadSuccess({ numPages }){\n        this.setState({ numOfPages:numPages });\n      }\n\n   componentDidMount(){\n        this.microsoftTeams = window? window.microsoftTeams: null;\n        if(this.microsoftTeams){\n            this.microsoftTeams.initialize();\n            this.microsoftTeams.getContext(async ({entityId}) =>{\n                const {apiKey, adminId, contact:{value :contactId}} = JSON.parse(entityId);\n                const res = await fetch(\n                    `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n                    {\n                        mode:\"cors\",\n                        method:\"POST\",\n                        body: JSON.stringify({\n                            method:\"GET\",\n                            path:`${adminId}/sales_invoices.json?filter=contact_id:${contactId}`,\n                            key: apiKey\n                        })\n                    }\n                )\n                const json = await res.json();\n                this.setState({\n                    invoices: json,\n                    adminId,\n                    apiKey,\n                    loading: false\n                })\n            })\n        }\n    }\n    render(){\n        const {crrInvoice, invoices, loading, numOfPages} = this.state;\n        const columns =[\n            {\n                name:\"Invoice id\",\n                selector:\"invoice_id\",\n                sortable: true\n            },\n            {\n                name:\"Reference\",\n                selector:\"reference\",\n                sortable: true\n            },\n            {\n                name:\"Invoice date\",\n                selector:\"invoice_date\",\n                sortable: true,\n                maxWidth:\"15%\",\n                minWidth:\"100px\"\n            },\n            {\n                name:\"Amount\",\n                selector:\"total_unpaid\",\n                sortable: true,\n                maxWidth:\"7%\",\n                minWidth:\"85px\",\n                right:true\n            },\n            {\n                name:\"Status\",\n                selector:\"state\",\n                sortable: true,\n                width: \"17%\",\n                cell: r=><div className={`state-label state-label--full-width ${r.state==\"paid\"? `state-label--success`: `state-label--warning`}`}><span className=\"state-label__text\">{r.state}</span></div>\n            },\n            {\n                name:\"Download\",\n                maxWidth: \"7%\",\n                minWidth: \"80px\",\n                center:true,\n                cell: r=><i onClick={()=>this.onDownloadRow(r)} className=\"fa fa-download download-btn\" ></i>,\n                ignoreRowClick: true,\n            }\n        ]\n        return (\n            \n            <div >\n                <Loader loading={loading}/>\n                <header style={styles.mainSidePadding}>\n                    {crrInvoice?\n                        <div style={styles.mainHeader}>\n                            <i className=\"left\" onClick={this.clearActive} style={{...styles.arrow}}></i>\n                            <i className=\"fa fa-download download-btn\" onClick={this.onDownloadMain}></i>\n                        </div>:null}\n                </header>\n                {\n                    crrInvoice ? \n                    <div style={styles.mainPadding}>\n                        <Document file={crrInvoice} onLoadSuccess={this.onDocumentLoadSuccess}>\n                        {\n                            Array.from(\n                            new Array(numOfPages),\n                            (el, index) => (\n                                <Page\n                                key={`page_${index + 1}`}\n                                pageNumber={index + 1}\n                                />\n                            ),\n                            )\n                        }\n                        </Document>\n                    </div>\n                    :\n                    <div style={styles.mainPadding}>\n                        <div style={styles.mainTable}>\n                            <DataTable\n                                columns={columns}\n                                data={invoices? invoices:[]}\n                                onRowClicked={this.setActive}\n                                pointerOnHover={true}\n                                highlightOnHover={true}\n                                noHeader={true}\n                            />\n                        </div>\n                    </div>\n                }\n\n            </div>\n        )\n    }\n  \n}\n\nexport default IndexPage;\n"],"sourceRoot":""}