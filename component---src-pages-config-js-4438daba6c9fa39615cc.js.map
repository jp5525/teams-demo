{"version":3,"sources":["webpack:///./node_modules/@fluentui/react-northstar/node_modules/@fluentui/accessibility/dist/es/behaviors/Radio/radioGroupBehavior.js","webpack:///./node_modules/@fluentui/react-northstar/dist/es/components/RadioGroup/RadioGroup.js","webpack:///./src/pages/config.js"],"names":["attributes","root","role","keyActions","nextItem","keyCombinations","keyCode","ArrowDown","ArrowRight","prevItem","ArrowUp","ArrowLeft","RadioGroup","props","context","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","children","vertical","items","className","design","styles","variables","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","getA11yProps","useAccessibility","accessibility","debugName","actionHandlers","event","setCheckedItem","rtl","classes","useStyles","mapPropsToInlineStyles","_useAutoControlled","useAutoControlled","defaultValue","defaultCheckedValue","value","checkedValue","initialValue","undefined","setCheckedValue","_React$useState","shouldFocus","setShouldFocus","getItemProps","item","direction","findNextEnabledCheckedItem","checkedValueChange","nextCheckedValue","itemProps","preventDefault","length","currentIndex","newIndex","disabled","handleItemOverrides","predefinedProps","checked","onClick","_ref","element","unstable_wrapWithFocusZone","Object","assign","rtlTextContainer","getAttributes","forElements","childrenExist","isNoneValueSelected","index","RadioGroupItem","create","defaultProps","tabIndex","overrideProps","renderItems","keys","propTypes","Item","Component","isNilOrEmpty","str","mainPadding","padding","mainSidePadding","mainPdf","display","justifyContent","mainTable","backgroundColor","border","borderRadius","boxShadow","position","backButton","cusor","label","fontWeight","langs","en","heading","apiSection","title","style","description","target","href","succsess","fail","placeholder","show","contactSection","typeSection","deleteDialog","cancel","confirm","header","message","x","tabs","nl","Config","microsoftTeams","initialize","state","apiKey","adminId","admins","admin","contacts","contact","loadingContacts","isNew","isOpen","isContactsOpen","locale","tabType","showApiKeys","loaded","submit","bind","getOptions","save","getAdmin","handleToken","handleAdmin","getContacts","updateContact","deleteKeyFromDb","createKeyEntry","update","callbacker","i","this","setState","a","tid","fetch","mode","method","body","JSON","stringify","path","key","res","json","console","log","error","id","map","k","content","cursor","class","deleteKey","componentDidMount","window","getContext","c","company_name","e","v","q","searchQuery","appInitialization","notifyAppLoaded","notifySuccess","lang","split","settings","setValidityState","registerOnSaveHandler","saveEvent","setSettings","websiteUrl","contentUrl","entityId","suggestedDisplayName","filter","render","radioOptions","name","Provider","theme","teamsTheme","Header","Flex","gap","vAlign","hAlign","FlexItem","onSubmit","width","Label","background","color","marginTop","marginBottom","Dropdown","onOpenChange","clearable","Boolean","fluid","search","open","itemToString","onSearchQueryChange","noResultsMessage","m","active","Button","text","Dialog","cancelButton","onCancel","confirmButton","onConfirm","backdrop","ref","r","drop","loading","loadingMessage","onChange","onCheckedValueChange","margingTop","React"],"mappings":"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","file":"component---src-pages-config-js-4438daba6c9fa39615cc.js","sourcesContent":["import { keyboardKey } from '@fluentui/keyboard-key';\n/**\n * @description\n * Implements ARIA Radio Group design pattern.\n * @specification\n *  Adds role='radiogroup'. This allows screen readers to handle the component as a radio group.\n *  Triggers 'nextItem' action with 'ArrowDown' or 'ArrowRight' on 'root'.\n *  Triggers 'prevItem' action with 'ArrowUp' or 'ArrowLeft' on 'root'.\n */\n\nexport var radioGroupBehavior = function radioGroupBehavior() {\n  return {\n    attributes: {\n      root: {\n        role: 'radiogroup'\n      }\n    },\n    keyActions: {\n      root: {\n        nextItem: {\n          keyCombinations: [{\n            keyCode: keyboardKey.ArrowDown\n          }, {\n            keyCode: keyboardKey.ArrowRight\n          }]\n        },\n        prevItem: {\n          keyCombinations: [{\n            keyCode: keyboardKey.ArrowUp\n          }, {\n            keyCode: keyboardKey.ArrowLeft\n          }]\n        }\n      }\n    }\n  };\n};","import _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport _findIndex from \"lodash/findIndex\"; // TODO:\n// vertical - padding variable?\n\nimport { radioGroupBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport { childrenExist, commonPropTypes, rtlTextContainer, createShorthandFactory } from '../../utils';\nimport { RadioGroupItem } from './RadioGroupItem';\nimport { useAutoControlled, useTelemetry, useFluentContext, getElementType, useUnhandledProps, useAccessibility, useStyles } from '@fluentui/react-bindings';\nexport var radioGroupClassName = 'ui-radiogroup';\n/**\n * A RadioGroup allows user to select a value from a small set of mutually exclusive options.\n *\n * @accessibility\n * Implements [ARIA Radio Group](https://www.w3.org/TR/wai-aria-practices-1.1/#radiobutton) design pattern.\n * @accessibilityIssues\n * [JAWS narrates instruction message on each radio in radiogroup](https://github.com/FreedomScientific/VFO-standards-support/issues/473)\n */\n\nexport var RadioGroup = /*#__PURE__*/function () {\n  var RadioGroup = function RadioGroup(props) {\n    var context = useFluentContext();\n\n    var _useTelemetry = useTelemetry(RadioGroup.displayName, context.telemetry),\n        setStart = _useTelemetry.setStart,\n        setEnd = _useTelemetry.setEnd;\n\n    setStart();\n    var children = props.children,\n        vertical = props.vertical,\n        items = props.items,\n        className = props.className,\n        design = props.design,\n        styles = props.styles,\n        variables = props.variables;\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(RadioGroup.handledProps, props);\n    var getA11yProps = useAccessibility(props.accessibility, {\n      debugName: RadioGroup.displayName,\n      actionHandlers: {\n        nextItem: function nextItem(event) {\n          return setCheckedItem(event, 1);\n        },\n        prevItem: function prevItem(event) {\n          return setCheckedItem(event, -1);\n        }\n      },\n      rtl: context.rtl\n    });\n\n    var _useStyles = useStyles(RadioGroup.displayName, {\n      className: radioGroupClassName,\n      mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n        return {\n          className: className,\n          design: design,\n          styles: styles,\n          variables: variables\n        };\n      },\n      rtl: context.rtl\n    }),\n        classes = _useStyles.classes;\n\n    var _useAutoControlled = useAutoControlled({\n      defaultValue: props.defaultCheckedValue,\n      value: props.checkedValue,\n      initialValue: undefined\n    }),\n        checkedValue = _useAutoControlled[0],\n        setCheckedValue = _useAutoControlled[1];\n\n    var _React$useState = React.useState(false),\n        shouldFocus = _React$useState[0],\n        setShouldFocus = _React$useState[1];\n\n    var getItemProps = function getItemProps(item) {\n      return item.props || item;\n    };\n\n    var setCheckedItem = function setCheckedItem(event, direction) {\n      var nextItem = findNextEnabledCheckedItem(direction);\n\n      if (nextItem) {\n        checkedValueChange({\n          nextCheckedValue: nextItem.value,\n          shouldFocus: true,\n          event: event,\n          itemProps: nextItem\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    var findNextEnabledCheckedItem = function findNextEnabledCheckedItem(direction) {\n      if (!props.items || !props.items.length) {\n        return undefined;\n      }\n\n      var currentIndex = // if none of the values selected, set current index to the first item\n      checkedValue !== undefined ? _findIndex(props.items, function (item) {\n        return getItemProps(item).value === checkedValue;\n      }) : 0;\n\n      for (var newIndex = currentIndex + direction; newIndex !== currentIndex; newIndex += direction) {\n        if (newIndex < 0) {\n          newIndex = props.items.length - 1;\n        } else if (newIndex >= props.items.length) {\n          newIndex = 0;\n        }\n\n        if (newIndex === currentIndex) {\n          return undefined;\n        }\n\n        var itemProps = getItemProps(props.items[newIndex]);\n\n        if (!itemProps.disabled) {\n          return itemProps;\n        }\n      }\n\n      return undefined;\n    };\n\n    var handleItemOverrides = function handleItemOverrides(predefinedProps) {\n      return {\n        checked: typeof checkedValue !== 'undefined' && checkedValue === predefinedProps.value,\n        onClick: function onClick(event, itemProps) {\n          var value = itemProps.value,\n              disabled = itemProps.disabled;\n\n          if (!disabled && value !== checkedValue) {\n            checkedValueChange({\n              nextCheckedValue: value,\n              shouldFocus: false,\n              event: event,\n              itemProps: itemProps\n            });\n          }\n\n          _invoke(predefinedProps, 'onClick', event, itemProps);\n        },\n        shouldFocus: shouldFocus\n      };\n    };\n\n    var renderItems = function renderItems(vertical) {\n      var isNoneValueSelected = checkedValue === undefined;\n      return _map(items, function (item, index) {\n        return RadioGroupItem.create(item, {\n          defaultProps: function defaultProps() {\n            return getA11yProps('item', Object.assign({\n              vertical: vertical\n            }, index === 0 && isNoneValueSelected && {\n              tabIndex: 0\n            }));\n          },\n          overrideProps: handleItemOverrides\n        });\n      });\n    };\n\n    var checkedValueChange = function checkedValueChange(_ref) {\n      var nextCheckedValue = _ref.nextCheckedValue,\n          shouldFocus = _ref.shouldFocus,\n          event = _ref.event,\n          itemProps = _ref.itemProps;\n      setCheckedValue(nextCheckedValue);\n      setShouldFocus(shouldFocus);\n\n      _invoke(props, 'onCheckedValueChange', event, itemProps);\n    };\n\n    var element = getA11yProps.unstable_wrapWithFocusZone( /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({\n      className: classes.root\n    }, unhandledProps, rtlTextContainer.getAttributes({\n      forElements: [children]\n    }))), childrenExist(children) ? children : renderItems(vertical)));\n    setEnd();\n    return element;\n  };\n\n  RadioGroup.displayName = 'RadioGroup';\n  RadioGroup.defaultProps = {\n    accessibility: radioGroupBehavior\n  };\n  RadioGroup.handledProps = Object.keys(RadioGroup.propTypes);\n  RadioGroup.Item = RadioGroupItem;\n  RadioGroup.create = createShorthandFactory({\n    Component: RadioGroup\n  });\n  return RadioGroup;\n}();","import React from 'react';\nimport { Provider, teamsTheme, Flex, FlexItem, Dropdown, RadioGroup, Header, Label, Button, Dialog} from '@fluentui/react-northstar';\nimport { BanIcon, AcceptIcon } from '@fluentui/react-icons-northstar';\n\n\n\nconst isNilOrEmpty = str => str==null || str.length == 0\n\nconst styles={\n    mainPadding:{padding:\"0px 2em\"},\n    mainSidePadding:{padding:\"10px 2em\"},\n    mainPdf:{display:\"flex\", justifyContent:\"center\"},\n    mainTable:{\n        backgroundColor: \"#fff\",\n        border: \"1px solid #d8e2f0\",\n        borderRadius: \"4px\",\n        boxShadow: \"0 0 10px 0 rgba(19,29,41,.05)\",\n        position: \"relative\",\n        padding: \"0em 3em 2em\"\n    },\n    backButton:{\n        cusor:\"pointer\"\n    },\n    label:{\n        fontWeight:\"bold\"\n    }\n}\n\nconst langs={\n    en:{\n        heading:\"Moneybird Configuration\",\n        apiSection:{\n            title: <label style={styles.label} >API Token</label>,\n            description:  <span>This is the API Token for you MoneyBird Account. You can generate one <a target=\"_blank\" href=\"https://moneybird.com/user/applications/new\">here</a> for personal use.</span>,\n            succsess: \"API Token is vaild\",\n            fail: \"API Token NOT vaild\",\n            placeholder: 'API Token',\n            show:\"Click to choose another api key\"\n        },\n        contactSection:{\n            title:<label style={styles.label} >Contact</label>,\n            description: <span>The contact whos data will show up on the tab</span>,\n            placeholder: 'Choose a Contact'\n        },\n        typeSection:{\n            title:<label style={styles.label} >Data Type</label>,\n            description: <span>The type of data to show on the tab</span>,\n           \n        },\n        deleteDialog:{\n            cancel: \"Cancel\",\n            confirm: \"Yes\",\n            header:\"Delete API Key\",\n            message: x=>`Are you sure you want to delete ${x}`,\n\n        },\n        tabs:[\"Invoices\", \"Quotes\"]\n    },\n    nl:{\n        heading:\"Moneybird Koppelen\",\n        apiSection:{\n            title:<label style={styles.label} >API token invoeren</label>,\n            description:  <span>Vul hier een API-token in van je Moneybird account. Je kunt <a target=\"_blank\" href=\"https://moneybird.com/user/applications/new\">hier</a> een API-token genereren. Vul een naam in die herkenbaar is voor deze connectie, bijvoorbeeld ‘Microsoft Teams Integratie’. Kies voor ‘API token voor persoonlijk gebruik’ en geef toegang voor alle onderdelen. Vervolgens verschijnt er een API-token in beeld. Vul deze hieronder in.</span>,\n            succsess: \"API-token is geldig\",\n            fail: \"API-token niet geldig\",\n            placeholder: 'API token invoeren',\n            show:\"Klik om een ​​andere API-sleutel te kiezen\"\n        },\n        contactSection:{\n            title:<label style={styles.label} >Contact</label>,\n            description:  <span>Selecteer de Contact waarvan je de gegevens wilt tonen in de Tab.</span>,\n            placeholder:\"Kies een Contact\"\n        },\n        typeSection:{\n            title:<label style={styles.label} >Data Type</label>,\n            description: <span>Het type gegevens dat op het tabblad moet worden weergegeven</span>,\n           \n        },\n        deleteDialog:{\n            cancel: \"Annuleren\",\n            confirm: \"Ja\",\n            header:\"API-sleutel verwijderen\",\n            message: x=>`Weet je zeker dat je wilt verwijderen ${x}`,\n\n        },\n        tabs:[\"Facturen\", \"Offertes\"]\n    }\n}\n\nclass Config extends React.Component{\n    constructor(){\n        super();\n        if(this.microsoftTeams)\n            this.microsoftTeams.initialize();\n        this.state ={\n            apiKey:null,\n            adminId:null,\n            admins:null,\n            admin:null,\n            contacts:null,\n            contact:null,\n            loadingContacts:false,\n            keys:[],\n            isNew:false,\n            isOpen: false,\n            isContactsOpen: false,\n            locale:null,\n            tabType:\"invoices\",\n            showApiKeys: false,\n            loaded: false\n        }\n        this.submit = this.submit.bind(this)\n        this.getOptions = this.getOptions.bind(this)\n        this.save = this.save.bind(this)\n        this.getAdmin = this.getAdmin.bind(this)\n        this.handleToken = this.handleToken.bind(this)\n        this.handleAdmin = this.handleAdmin.bind(this)\n        this.getContacts= this.getContacts.bind(this)\n        this.updateContact = this.updateContact.bind(this)\n        this.deleteKeyFromDb=this.deleteKeyFromDb.bind(this)\n        this.createKeyEntry=this.createKeyEntry.bind(this)\n        this.update=this.update.bind(this)\n        this.callbacker=this.callbacker.bind(this)\n    }\n\n    update(i){\n        this.setState(i)\n    }\n    async getAdmin(apiKey, isNew=false){\n        const {tid} = this.state;\n        try{\n            const res = await fetch(\n                `https://moneybirdproxymaatwerk.azurewebsites.net/api/MoneyBirdProxy`,\n                {\n                    mode:\"cors\",\n                    method:\"POST\",\n                    body: JSON.stringify({\n                        method:\"GET\",\n                        path:`administrations.json`,\n                        key: apiKey,\n                        isNew,\n                        tid\n                    })\n                }\n            )\n            const json = await res.json()\n            console.log({json})\n            if(json.error)\n                this.setState({admins:false,  isOpen:false, contacts:null})\n            else{\n                this.setState({admin:json[0], adminId:json[0].id, admins:true, isOpen:false})\n                this.submit(json[0])\n            }\n        }\n        catch(e){\n            console.log(e)\n        }\n    }\n\n    async callbacker(context){\n        const {tid, locale} = context;\n        \n            try{\n                const res = await fetch(\n                    `https://moneybirdproxymaatwerk.azurewebsites.net/api/key/${tid}`,\n                    {\n                        mode:\"cors\",\n                        method:\"GET\"\n                    }\n                )\n                const json = await res.json()\n                console.log({json})\n                const keys = json.map(k=>({\n                    content: <div>\n                        <span style={{cursor:\"pointer\"}} class=\"lnr lnr-trash\" onClick={()=>this.setState({deleteKey:k.key, isOpen:false})}></span> - <span style={{cursor:\"pointer\"}} onClick={()=>this.handleToken(k.key)}>{k.key}</span>\n                    </div>,\n                    key: k.key\n                }));\n                const apiKey = json.length > 0 ? json[0].key : \"\"\n                const showApiKeys = isNilOrEmpty(apiKey)\n                \n                if(showApiKeys == false){\n                    this.getAdmin(apiKey)\n                }\n                this.update({keys, apiKey, showApiKeys, tid, locale})\n\n            }\n            catch(e){\n                console.log(\"BOO\")\n                console.log(e)\n            }\n    }\n    async componentDidMount(){\n        this.microsoftTeams = window? window.microsoftTeams: null;\n        this.microsoftTeams.initialize();\n        \n        this.microsoftTeams.getContext(this.callbacker)\n    }\n\n    getOptions(){\n        const {contacts} = this.state;\n        return contacts.map(c=>({\n            content:c.company_name, \n            value:c.id,\n        }))\n    }\n\n    handleAdmin(e, value){\n        this.setState({ admin: value.value })\n        this.submit(value.value)\n    }\n    async getContacts(v, e){\n        \n        if(e){\n            const {apiKey, adminId} = this.state;\n            const q = e.searchQuery;\n            try{\n                this.setState({loadingContacts:true})\n                const res = await fetch(\n                    `https://moneybirdproxymaatwerk.azurewebsites.net/api/MoneyBirdProxy`,\n                    {\n                        mode:\"cors\",\n                        method:\"POST\",\n                        body: JSON.stringify({\n                            method:\"GET\",\n                            path:`${adminId}/contacts.json${isNilOrEmpty(q)?'':\"?query=\"+q}`,\n                            key: apiKey,\n                        })\n                    }\n                )\n                const json = await res.json()\n                console.log({json})\n                this.setState({contacts:json, loadingContacts:false})\n    \n            }\n            catch(e){\n                console.log(\"BOOM!\")\n                console.log(e)\n            }\n        }\n        else{\n            this.setState({ contact: v.value }, this.save)\n        }\n    }\n    handleToken(v){\n        this.setState({apiKey:v, isOpen:false})\n        this.getAdmin(v);\n    }\n    async submit({id :adminId}){\n        console.log({adminId})\n        const {apiKey, isNew, loaded} = this.state;\n\n        this.microsoftTeams.initialize();\n        this.microsoftTeams.getContext((async context=>{\n           const {tid} = context;\n            try{\n                const res = await fetch(\n                    `https://moneybirdproxymaatwerk.azurewebsites.net/api/MoneyBirdProxy`,\n                    {\n                        mode:\"cors\",\n                        method:\"POST\",\n                        body: JSON.stringify({\n                            method:\"GET\",\n                            path:`${adminId}/contacts.json`,\n                            key: apiKey,\n                           tid,\n                            isNew\n                        })\n                    }\n                )\n                const json = await res.json()\n                console.log({json})\n                this.setState({contacts:json,  isOpen:false})\n                if(loaded == false){\n                    this.microsoftTeams.appInitialization.notifyAppLoaded();\n                    this.microsoftTeams.appInitialization.notifySuccess()\n                    this.setState({loaded: true})\n                }\n                \n            }\n            catch(e){\n                console.log(\"BOOM!\")\n                console.log(e)\n            }\n            \n        }).bind(this))\n    }\n    updateContact(e, {value}){\n        this.setState({contact:value}, ()=>this.save())\n    }\n    save(){\n        const {apiKey, adminId, contact, locale, tabType} = this.state;\n        const lang = locale.split(\"-\")[0];\n        console.log({contact})\n        this.microsoftTeams.initialize();\n        this.microsoftTeams.settings.setValidityState(true);\n        this.microsoftTeams.settings.registerOnSaveHandler((saveEvent) => {\n            this.microsoftTeams.settings.setSettings({\n                websiteUrl: tabType==\"invoices\"?`https://jp5525.github.io/teams-demo/invoices`:\"https://jp5525.github.io/teams-demo/quotes\",\n                contentUrl: tabType==\"invoices\"?`https://jp5525.github.io/teams-demo/invoices`:\"https://jp5525.github.io/teams-demo/quotes\",\n                entityId: JSON.stringify({apiKey, adminId, contact}),\n                suggestedDisplayName: `Moneybird ${tabType==\"invoices\"?langs[lang].tabs[0]:langs[lang].tabs[1]}`\n            });\n            saveEvent.notifySuccess();\n        });\n    }\n    async deleteKeyFromDb(){\n        const {deleteKey, keys} = this.state;\n        if(!isNilOrEmpty(deleteKey)){\n            await fetch(\n                `https://moneybirdproxymaatwerk.azurewebsites.net/api/key/${deleteKey}`,\n                {\n                    mode:\"cors\",\n                    method:\"DELETE\",\n                }\n            );\n            this.setState({deleteKey:null, apiKey:\"\", keys:keys.filter(x=>x.key != deleteKey)})\n        }\n    }\n    createKeyEntry(k){\n        return {\n            content:<div>\n                <span style={{cursor:\"pointer\"}} class=\"lnr lnr-trash\" onClick={()=>this.setState({deleteKey:k})}></span> - <span style={{cursor:\"pointer\"}} onClick={()=>this.handleToken(k)}>{k}</span>\n            </div>,\n            key:k\n        }\n    }\n\n    render(){\n        const {contacts, contact, admins, admin, apiKey, keys, isOpen, locale, loadingContacts, showApiKeys, deleteKey } = this.state;\n        \n        \n        console.log({locale})\n        console.log(\"YIKES-5\",apiKey)\n        const lang = locale? langs[locale.split(\"-\")[0]]: null\n        const radioOptions = lang? [\n            {\n              key: 'invoices',\n              value: 'invoices',\n              name: 'invoices',\n              label: lang.tabs[0],\n              onClick:()=>this.setState({tabType:\"invoices\"})\n            },\n            {\n              key: 'quotes',\n              name: 'quotes',\n              value: 'quotes',\n              label: lang.tabs[1],\n              onClick:()=>this.setState({tabType:\"quotes\"})\n            }\n          ]: null\n\n        console.log({keys})\n        return (\n            lang?\n                <Provider theme={teamsTheme}>\n                    <div style={styles.mainPadding}>\n                        <div style={styles.mainTable}>\n                            <Header content={lang.heading}/>\n                            <Flex gap=\"gap.small\" vAlign=\"center\" hAlign=\"start\">\n                                <FlexItem justifyContent=\"center\">\n                                    <form onSubmit={this.submit} style={{width:\"100%\"}}>\n                                        \n                                        {lang.apiSection.title} <br/>\n                                        {lang.apiSection.description}\n                                        {admins== false? <> <br/><Label content={lang.apiSection.fail} style={{background:\"#cc4a31\", color:\"white\", marginTop: \"10px\", marginBottom:\"10px\"}}/></> : null}\n                                        {admins? <> <br/><Label content={lang.apiSection.succsess} style={{background:\"#7fba00\", color:\"white\", marginTop: \"10px\", marginBottom:\"10px\"}} /></> : null}\n                                        {showApiKeys?<Dropdown\n                                            items={keys || []}\n                                            placeholder={lang.apiSection.placeholder}\n                                            onOpenChange={()=>this.setState({isOpen:!isOpen})}\n                                            name=\"apiKey\"\n                                            id=\"apiKey\"\n                                            clearable={Boolean(apiKey && apiKey.length>0)}\n                                            fluid={true}\n                                            search={true}\n                                            open={isOpen}\n                                            searchQuery={apiKey}\n                                            itemToString={i=> i? i.key : null}\n                                            onSearchQueryChange={(e, v)=>this.setState({apiKey:v.searchQuery})}\n                                            noResultsMessage={{\n                                                content:`Add... ${apiKey}`, \n                                                onClick: m=>{\n                                                    this.setState({isNew:true, keys:[this.createKeyEntry(apiKey), ...keys], isOpen:false}, ()=>this.getAdmin(apiKey, true))\n                                                    \n                                                }, \n                                                style:{cursor: \"pointer\"},\n                                                active: true\n                                            }}\n                                        />\n                                        :\n                                        <div><Button text content={lang.apiSection.show} onClick={()=>this.setState({showApiKeys: true})} style={{padding: \"0px\"}}/></div>\n                                        }\n                                        <Dialog\n                                            cancelButton={lang.deleteDialog.cancel}\n                                            onCancel={()=>this.setState({deleteKey:null})}\n                                            confirmButton={lang.deleteDialog.confirm}\n                                            onConfirm={this.deleteKeyFromDb}\n                                            content={lang.deleteDialog.message(deleteKey)}\n                                            header={lang.deleteDialog.header}\n                                            open={!isNilOrEmpty(deleteKey)}\n                                            backdrop={true} \n                                        />\n                                        \n                                       {/* <br />\n\n                                        {lang.adminSection.title} <br/>\n                                        {lang.adminSection.description}\n                                        <Dropdown\n                                            items={admins? admins.map(a=>({content:a.name, value:a.id})): []}\n                                            value={admin? admin.content : null}\n                                            placeholder={lang.adminSection.placeholder}\n                                            onChange={this.handleAdmin}\n                                            name=\"Admin\"\n                                            disabled={admins? false: true}\n                                            fluid={true}\n                                       />*/}\n\n                                        <br />\n\n                                        {lang.contactSection.title} <br/>\n                                        {lang.contactSection.description}\n                                        <Dropdown\n                                            ref={r=>this.drop=r}\n                                            items={contacts? this.getOptions(): []}\n                                            value={contact? contact.content : null}\n                                            placeholder={lang.contactSection.placeholder}\n                                            search={true}\n                                            loading={loadingContacts}\n                                            loadingMessage=\"Loading...\"\n                                            onSearchQueryChange={this.getContacts}\n                                            onChange={this.updateContact}\n                                            name=\"contact\"\n                                            disabled={contacts? false: true}\n                                            itemToString={i=>i?i.content:''}\n                                            fluid={true}\n                                            />\n\n                                        <br />\n\n                                        {lang.typeSection.title} <br/>\n                                        {lang.typeSection.description}\n                                        <RadioGroup\n                                            defaultCheckedValue=\"invoices\"\n                                            items={radioOptions || []}\n                                            onCheckedValueChange={(e, props) =>{\n                                                this.setState({tabType: props.value}, ()=>this.save())\n                                            }}\n                                            style={{margingTop:\"5px\"}}\n                                        />\n\n                                    </form>\n                                </FlexItem>\n                            </Flex>\n                        </div>\n                    </div>\n                \n                </Provider>:\n                null\n            \n            \n        )\n\n    }\n}\n\nexport default Config;\n"],"sourceRoot":""}