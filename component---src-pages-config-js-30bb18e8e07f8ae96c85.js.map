{"version":3,"sources":["webpack:///./src/pages/config.js"],"names":["styles","mainPadding","padding","mainSidePadding","mainPdf","display","justifyContent","mainTable","backgroundColor","border","borderRadius","boxShadow","position","backButton","cusor","label","fontWeight","Config","microsoftTeams","initialize","state","apiKey","adminId","admins","admin","contacts","contact","handleChange","bind","submit","getOptions","handleContact","save","getAdmin","debounce","handleToken","handleAdmin","a","fetch","mode","method","body","JSON","stringify","path","key","res","json","console","log","error","this","setState","componentDidMount","window","map","c","content","company_name","value","id","e","event","target","name","settings","setValidityState","registerOnSaveHandler","saveEvent","setSettings","websiteUrl","contentUrl","entityId","suggestedDisplayName","notifySuccess","render","theme","themes","teams","style","gap","vAlign","hAlign","onSubmit","width","href","icon","as","CloseIcon","AcceptIcon","type","placeholder","onChange","fluid","items","disabled","React","Component"],"mappings":"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","file":"component---src-pages-config-js-30bb18e8e07f8ae96c85.js","sourcesContent":["import React from 'react';\nimport debounce from 'debounce'\nimport { Provider, themes, Button, Flex, FlexItem, Dropdown, Input, Header, Label} from '@fluentui/react-northstar';\nimport { CloseIcon, AcceptIcon } from '@fluentui/react-icons-northstar';\n\n\nconst styles={\n    mainPadding:{padding:\"0px 2em\"},\n    mainSidePadding:{padding:\"10px 2em\"},\n    mainPdf:{display:\"flex\", justifyContent:\"center\"},\n    mainTable:{\n        backgroundColor: \"#fff\",\n        border: \"1px solid #d8e2f0\",\n        borderRadius: \"4px\",\n        boxShadow: \"0 0 10px 0 rgba(19,29,41,.05)\",\n        position: \"relative\",\n        padding: \"0em 3em 2em\"\n    },\n    backButton:{\n        cusor:\"pointer\"\n    },\n    label:{\n        fontWeight:\"bold\"\n    }\n}\nclass Config extends React.Component{\n    constructor(){\n        super();\n        if(this.microsoftTeams)\n            this.microsoftTeams.initialize();\n        this.state ={\n            apiKey:\"\",\n            adminId:\"\",\n            admins:null,\n            admin:null,\n            contacts:null,\n            contact:null\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.submit = this.submit.bind(this)\n        this.getOptions = this.getOptions.bind(this)\n        this.handleContact = this.handleContact.bind(this)\n        this.save = this.save.bind(this)\n        this.getAdmin = debounce(this.getAdmin,2000).bind(this)\n        this.handleToken = this.handleToken.bind(this)\n        this.handleAdmin = this.handleAdmin.bind(this)\n    }\n\n    async getAdmin(apiKey){\n        try{\n            const res = await fetch(\n                `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n                {\n                    mode:\"cors\",\n                    method:\"POST\",\n                    body: JSON.stringify({\n                        method:\"GET\",\n                        path:`administrations.json`,\n                        key: apiKey\n                    })\n                }\n            )\n            const json = await res.json()\n            console.log({json})\n            if(json.error)\n                this.setState({admins:false})\n            else\n                this.setState({admins:json})\n        }\n        catch(e){\n            console.log(e)\n        }\n    }\n\n    componentDidMount(){\n        this.microsoftTeams = window? window.microsoftTeams: null;\n    }\n\n    getOptions(){\n        const {contacts} = this.state;\n        return contacts.map(c=>({content:c.company_name, value:c.id}))\n    }\n\n    handleContact(e, value){\n        this.setState({ contact: value.value }, this.save)\n    }\n\n    handleAdmin(e, value){\n        this.setState({ admin: value.value })\n        this.submit(value.value)\n    }\n\n  \n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n    handleToken(e){\n        this.handleChange(e);\n        this.getAdmin(e.target.value);\n\n    }\n    async submit({value :adminId}){\n        console.log(adminId)\n        const {apiKey} = this.state;\n        try{\n            const res = await fetch(\n                `https://moneybirdhandlerproxy.azurewebsites.net/api/MoneyBirdProxy`,\n                {\n                    mode:\"cors\",\n                    method:\"POST\",\n                    body: JSON.stringify({\n                        method:\"GET\",\n                        path:`${adminId}/contacts.json`,\n                        key: apiKey\n                    })\n                }\n            )\n            const json = await res.json()\n            console.log({json})\n            this.setState({contacts:json})\n\n        }\n        catch(e){\n            console.log(\"BOOM!\")\n            console.log(e)\n        }\n    }\n\n    save(){\n        \n        const {apiKey, admin:{value: adminId}, contact} = this.state;\n        this.microsoftTeams.initialize();\n        this.microsoftTeams.settings.setValidityState(true);\n        this.microsoftTeams.settings.registerOnSaveHandler((saveEvent) => {\n            this.microsoftTeams.settings.setSettings({\n                websiteUrl: \"https://jp5525.github.io/teams-demo\",\n                contentUrl: \"https://jp5525.github.io/teams-demo\",\n                entityId: JSON.stringify({apiKey, adminId, contact}),\n                suggestedDisplayName: \"MoneyBird Invoices\"\n            });\n            saveEvent.notifySuccess();\n        });\n    }\n\n    render(){\n        const {contacts, contact, admins, admin } = this.state\n        return (\n            \n                <Provider theme={themes.teams}>\n                    <div style={styles.mainPadding}>\n                        <div style={styles.mainTable}>\n                            <Header content=\"MoneyBird Setup\" />\n                            <Flex gap=\"gap.small\" vAlign=\"center\" hAlign=\"start\">\n                                <FlexItem justifyContent=\"center\">\n                                    <form onSubmit={this.submit} style={{width:\"100%\"}}>\n                                        \n                                        <label style={styles.label} >API Token</label> <br/>\n                                        <span>This is the API Token for you MoneyBird Account. You can generate one <a target=\"_blank\" href=\"https://moneybird.com/user/applications/new\">here</a> for personal use.</span>\n                                        {admins== false? <> <br/><Label content=\"API Token not vaild\" icon={{as: CloseIcon}}/></> : null}\n                                        {admins? <> <br/><Label content=\"API Token IS vaild\" icon={{as: AcceptIcon}}/></> : null}\n                                        <Input type=\"text\" placeholder=\"API Token\" name=\"apiKey\" id=\"apiKey\" onChange={this.handleToken} fluid={true}/> <br />\n                                        \n                                        <br />\n\n                                        <label style={styles.label} >Administration</label> <br/>\n                                        <span>This is the administration you created your API Token for</span>\n                                        <Dropdown\n                                            items={admins? admins.map(a=>({content:a.name, value:a.id})): []}\n                                            value={admin? admin.content : null}\n                                            placeholder='Administrations'\n                                            onChange={this.handleAdmin}\n                                            name=\"Admin\"\n                                            disabled={admins? false: true}\n                                            fluid={true}\n                                            />\n\n                                        <br />\n\n                                        <label style={styles.label} >Contact</label> <br/>\n                                        <span>The contact whos invoice's will show up on the invoices tabs</span>\n                                        <Dropdown\n                                            items={contacts? this.getOptions(): []}\n                                            value={contact? contact.content : null}\n                                            placeholder='Contacts'\n                                            onChange={this.handleContact}\n                                            name=\"contact\"\n                                            disabled={contacts? false: true}\n                                            />\n                \n                                    </form>\n                                </FlexItem>\n                            </Flex>\n                        </div>\n                    </div>\n                </Provider>\n            \n            \n        )\n\n    }\n}\n\nexport default Config;\n"],"sourceRoot":""}